{"agent": [{"link": "http://arxiv.org/abs/cs/9308102v1", "name": "A Market-Oriented Programming Environment and its Application to\n  Distributed Multicommodity Flow Problems", "description": "  Market price systems constitute a well-understood class of mechanisms that\nunder certain conditions provide effective decentralization of decision making\nwith minimal communication overhead. In a market-oriented programming approach\nto distributed problem solving, we derive the activities and resource\nallocations for a set of computational agents by computing the competitive\nequilibrium of an artificial economy. WALRAS provides basic constructs for\ndefining computational market structures, and protocols for deriving their\ncorresponding price equilibria. In a particular realization of this approach\nfor a form of multicommodity flow problem, we see that careful construction of\nthe decision process according to economic principles can lead to efficient\ndistributed resource allocation, and that the behavior of the system can be\nmeaningfully analyzed in economic terms.\n", "weight": 0.98084557056427}, {"link": "http://arxiv.org/abs/cs/9311102v1", "name": "Software Agents: Completing Patterns and Constructing User Interfaces", "description": "  To support the goal of allowing users to record and retrieve information,\nthis paper describes an interactive note-taking system for pen-based computers\nwith two distinctive features. First, it actively predicts what the user is\ngoing to write. Second, it automatically constructs a custom, button-box user\ninterface on request. The system is an example of a learning-apprentice\nsoftware- agent. A machine learning component characterizes the syntax and\nsemantics of the user's information. A performance system uses this learned\ninformation to generate completion strings and construct a user interface.\nDescription of Online Appendix: People like to record information. Doing this\non paper is initially efficient, but lacks flexibility. Recording information\non a computer is less efficient but more powerful. In our new note taking\nsoftwre, the user records information directly on a computer. Behind the\ninterface, an agent acts for the user. To help, it provides defaults and\nconstructs a custom user interface. The demonstration is a QuickTime movie of\nthe note taking agent in action. The file is a binhexed self-extracting\narchive. Macintosh utilities for binhex are available from\nmac.archive.umich.edu. QuickTime is available from ftp.apple.com in the\ndts/mac/sys.soft/quicktime.\n", "weight": 0.34783485531806946}, {"link": "http://arxiv.org/abs/cs/9401101v1", "name": "Teleo-Reactive Programs for Agent Control", "description": "  A formalism is presented for computing and organizing actions for autonomous\nagents in dynamic environments. We introduce the notion of teleo-reactive (T-R)\nprograms whose execution entails the construction of circuitry for the\ncontinuous computation of the parameters and conditions on which agent action\nis based. In addition to continuous feedback, T-R programs support parameter\nbinding and recursion. A primary difference between T-R programs and many other\ncircuit-based systems is that the circuitry of T-R programs is more compact; it\nis constructed at run time and thus does not have to anticipate all the\ncontingencies that might arise over all possible runs. In addition, T-R\nprograms are intuitive and easy to write and are written in a form that is\ncompatible with automatic planning and learning methods. We briefly describe\nsome experimental applications of T-R programs in the control of simulated and\nactual mobile robots.\n", "weight": 0.6591116786003113}, {"link": "http://arxiv.org/abs/cs/9505103v1", "name": "Provably Bounded-Optimal Agents", "description": "  Since its inception, artificial intelligence has relied upon a theoretical\nfoundation centered around perfect rationality as the desired property of\nintelligent systems. We argue, as others have done, that this foundation is\ninadequate because it imposes fundamentally unsatisfiable requirements. As a\nresult, there has arisen a wide gap between theory and practice in AI,\nhindering progress in the field. We propose instead a property called bounded\noptimality. Roughly speaking, an agent is bounded-optimal if its program is a\nsolution to the constrained optimization problem presented by its architecture\nand the task environment. We show how to construct agents with this property\nfor a simple class of machine architectures in a broad class of real-time\nenvironments. We illustrate these results using a simple model of an automated\nmail sorting facility. We also define a weaker property, asymptotic bounded\noptimality (ABO), that generalizes the notion of optimality in classical\ncomplexity theory. We then construct universal ABO programs, i.e., programs\nthat are ABO no matter what real-time constraints are applied. Universal ABO\nprograms can be used as building blocks for more complex systems. We conclude\nwith a discussion of the prospects for bounded optimality as a theoretical\nbasis for AI, and relate it to similar trends in philosophy, economics, and\ngame theory.\n", "weight": 0.1459183245897293}, {"link": "http://arxiv.org/abs/cs/9508102v1", "name": "An Integrated Framework for Learning and Reasoning", "description": "  Learning and reasoning are both aspects of what is considered to be\nintelligence. Their studies within AI have been separated historically,\nlearning being the topic of machine learning and neural networks, and reasoning\nfalling under classical (or symbolic) AI. However, learning and reasoning are\nin many ways interdependent. This paper discusses the nature of some of these\ninterdependencies and proposes a general framework called FLARE, that combines\ninductive learning using prior knowledge together with reasoning in a\npropositional setting. Several examples that test the framework are presented,\nincluding classical induction, many important reasoning protocols and two\nsimple expert systems.\n", "weight": 0.9790622591972351}, {"link": "http://arxiv.org/abs/cs/9512101v1", "name": "OPUS: An Efficient Admissible Algorithm for Unordered Search", "description": "  OPUS is a branch and bound search algorithm that enables efficient admissible\nsearch through spaces for which the order of search operator application is not\nsignificant. The algorithm's search efficiency is demonstrated with respect to\nvery large machine learning search spaces. The use of admissible search is of\npotential value to the machine learning community as it means that the exact\nlearning biases to be employed for complex learning tasks can be precisely\nspecified and manipulated. OPUS also has potential for application in other\nareas of artificial intelligence, notably, truth maintenance.\n", "weight": 0.370038241147995}, {"link": "http://arxiv.org/abs/cs/9602102v1", "name": "Logarithmic-Time Updates and Queries in Probabilistic Networks", "description": "  Traditional databases commonly support efficient query and update procedures\nthat operate in time which is sublinear in the size of the database. Our goal\nin this paper is to take a first step toward dynamic reasoning in probabilistic\ndatabases with comparable efficiency. We propose a dynamic data structure that\nsupports efficient algorithms for updating and querying singly connected\nBayesian networks. In the conventional algorithm, new evidence is absorbed in\nO(1) time and queries are processed in time O(N), where N is the size of the\nnetwork. We propose an algorithm which, after a preprocessing phase, allows us\nto answer queries in time O(log N) at the expense of O(log N) time per evidence\nabsorption. The usefulness of sub-linear processing time manifests itself in\napplications requiring (near) real-time response over large probabilistic\ndatabases. We briefly discuss a potential application of dynamic probabilistic\nreasoning in computational biology.\n", "weight": 0.45876115560531616}, {"link": "http://arxiv.org/abs/cs/9605103v1", "name": "Reinforcement Learning: A Survey", "description": "  This paper surveys the field of reinforcement learning from a\ncomputer-science perspective. It is written to be accessible to researchers\nfamiliar with machine learning. Both the historical basis of the field and a\nbroad selection of current work are summarized. Reinforcement learning is the\nproblem faced by an agent that learns behavior through trial-and-error\ninteractions with a dynamic environment. The work described here has a\nresemblance to work in psychology, but differs considerably in the details and\nin the use of the word ``reinforcement.'' The paper discusses central issues of\nreinforcement learning, including trading off exploration and exploitation,\nestablishing the foundations of the field via Markov decision theory, learning\nfrom delayed reinforcement, constructing empirical models to accelerate\nlearning, making use of generalization and hierarchy, and coping with hidden\nstate. It concludes with a survey of some implemented systems and an assessment\nof the practical utility of current methods for reinforcement learning.\n", "weight": 0.3651682138442993}, {"link": "http://arxiv.org/abs/cs/9605105v1", "name": "A Formal Framework for Speedup Learning from Problems and Solutions", "description": "  Speedup learning seeks to improve the computational efficiency of problem\nsolving with experience. In this paper, we develop a formal framework for\nlearning efficient problem solving from random problems and their solutions. We\napply this framework to two different representations of learned knowledge,\nnamely control rules and macro-operators, and prove theorems that identify\nsufficient conditions for learning in each representation. Our proofs are\nconstructive in that they are accompanied with learning algorithms. Our\nframework captures both empirical and explanation-based speedup learning in a\nunified fashion. We illustrate our framework with implementations in two\ndomains: symbolic integration and Eight Puzzle. This work integrates many\nstrands of experimental and theoretical work in machine learning, including\nempirical learning of control rules, macro-operator learning, Explanation-Based\nLearning (EBL), and Probably Approximately Correct (PAC) Learning.\n", "weight": 0.7084716558456421}, {"link": "http://arxiv.org/abs/cs/9610101v1", "name": "Mechanisms for Automated Negotiation in State Oriented Domains", "description": "  This paper lays part of the groundwork for a domain theory of negotiation,\nthat is, a way of classifying interactions so that it is clear, given a domain,\nwhich negotiation mechanisms and strategies are appropriate. We define State\nOriented Domains, a general category of interaction. Necessary and sufficient\nconditions for cooperation are outlined. We use the notion of worth in an\naltered definition of utility, thus enabling agreements in a wider class of\njoint-goal reachable situations. An approach is offered for conflict\nresolution, and it is shown that even in a conflict situation, partial\ncooperative steps can be taken by interacting agents (that is, agents in\nfundamental conflict might still agree to cooperate up to a certain point). A\nUnified Negotiation Protocol (UNP) is developed that can be used in all types\nof encounters. It is shown that in certain borderline cooperative situations, a\npartial cooperative agreement (i.e., one that does not achieve all agents'\ngoals) might be preferred by all agents, even though there exists a rational\nagreement that would achieve all their goals. Finally, we analyze cases where\nagents have incomplete information on the goals and worth of other agents.\nFirst we consider the case where agents' goals are private information, and we\nanalyze what goal declaration strategies the agents might adopt to increase\ntheir utility. Then, we consider the situation where the agents' goals (and\ntherefore stand-alone costs) are common knowledge, but the worth they attach to\ntheir goals is private information. We introduce two mechanisms, one 'strict',\nthe other 'tolerant', and analyze their affects on the stability and efficiency\nof negotiation outcomes.\n", "weight": 0.9896527528762817}, {"link": "http://arxiv.org/abs/cs/9711104v1", "name": "Dynamic Non-Bayesian Decision Making", "description": "  The model of a non-Bayesian agent who faces a repeated game with incomplete\ninformation against Nature is an appropriate tool for modeling general\nagent-environment interactions. In such a model the environment state\n(controlled by Nature) may change arbitrarily, and the feedback/reward function\nis initially unknown. The agent is not Bayesian, that is he does not form a\nprior probability neither on the state selection strategy of Nature, nor on his\nreward function. A policy for the agent is a function which assigns an action\nto every history of observations and actions. Two basic feedback structures are\nconsidered. In one of them -- the perfect monitoring case -- the agent is able\nto observe the previous environment state as part of his feedback, while in the\nother -- the imperfect monitoring case -- all that is available to the agent is\nthe reward obtained. Both of these settings refer to partially observable\nprocesses, where the current environment state is unknown. Our main result\nrefers to the competitive ratio criterion in the perfect monitoring case. We\nprove the existence of an efficient stochastic policy that ensures that the\ncompetitive ratio is obtained at almost all stages with an arbitrarily high\nprobability, where efficiency is measured in terms of rate of convergence. It\nis further shown that such an optimal policy does not exist in the imperfect\nmonitoring case. Moreover, it is proved that in the perfect monitoring case\nthere does not exist a deterministic policy that satisfies our long run\noptimality criterion. In addition, we discuss the maxmin criterion and prove\nthat a deterministic efficient optimal strategy does exist in the imperfect\nmonitoring case under this criterion. Finally we show that our approach to\nlong-run optimality can be viewed as qualitative, which distinguishes it from\nprevious work in this area.\n", "weight": 0.6352734565734863}, {"link": "http://arxiv.org/abs/cs/9712102v1", "name": "Bidirectional Heuristic Search Reconsidered", "description": "  The assessment of bidirectional heuristic search has been incorrect since it\nwas first published more than a quarter of a century ago. For quite a long\ntime, this search strategy did not achieve the expected results, and there was\na major misunderstanding about the reasons behind it. Although there is still\nwide-spread belief that bidirectional heuristic search is afflicted by the\nproblem of search frontiers passing each other, we demonstrate that this\nconjecture is wrong. Based on this finding, we present both a new generic\napproach to bidirectional heuristic search and a new approach to dynamically\nimproving heuristic values that is feasible in bidirectional search only. These\napproaches are put into perspective with both the traditional and more recently\nproposed approaches in order to facilitate a better overall understanding.\nEmpirical results of experiments with our new approaches show that\nbidirectional heuristic search can be performed very efficiently and also with\nlimited memory. These results suggest that bidirectional heuristic search\nappears to be better for solving certain difficult problems than corresponding\nunidirectional search. This provides some evidence for the usefulness of a\nsearch strategy that was long neglected. In summary, we show that bidirectional\nheuristic search is viable and consequently propose that it be reconsidered.\n", "weight": 0.4129561185836792}, {"link": "http://arxiv.org/abs/cs/9805101v1", "name": "Integrative Windowing", "description": "  In this paper we re-investigate windowing for rule learning algorithms. We\nshow that, contrary to previous results for decision tree learning, windowing\ncan in fact achieve significant run-time gains in noise-free domains and\nexplain the different behavior of rule learning algorithms by the fact that\nthey learn each rule independently. The main contribution of this paper is\nintegrative windowing, a new type of algorithm that further exploits this\nproperty by integrating good rules into the final theory right after they have\nbeen discovered. Thus it avoids re-learning these rules in subsequent\niterations of the windowing process. Experimental evidence in a variety of\nnoise-free domains shows that integrative windowing can in fact achieve\nsubstantial run-time gains. Furthermore, we discuss the problem of noise in\nwindowing and present an algorithm that is able to achieve run-time gains in a\nset of experiments in a simple domain with artificial noise.\n", "weight": 0.9861489534378052}, {"link": "http://arxiv.org/abs/cs/0002009v1", "name": "Syntactic Autonomy: Why There is no Autonomy without Symbols and How\n  Self-Organization Might Evolve Them", "description": "  Two different types of agency are discussed based on dynamically coherent and\nincoherent couplings with an environment respectively. I propose that until a\nprivate syntax (syntactic autonomy) is discovered by dynamically coherent\nagents, there are no significant or interesting types of closure or autonomy.\nWhen syntactic autonomy is established, then, because of a process of\ndescription-based selected self-organization, open-ended evolution is enabled.\nAt this stage, agents depend, in addition to dynamics, on localized, symbolic\nmemory, thus adding a level of dynamical incoherence to their interaction with\nthe environment. Furthermore, it is the appearance of syntactic autonomy which\nenables much more interesting types of closures amongst agents which share the\nsame syntax. To investigate how we can study the emergence of syntax from\ndynamical systems, experiments with cellular automata leading to emergent\ncomputation to solve non-trivial tasks are discussed. RNA editing is also\nmentioned as a process that may have been used to obtain a primordial\nbiological code necessary open-ended evolution.\n", "weight": 0.9836326837539673}, {"link": "http://arxiv.org/abs/cs/0107002v1", "name": "Enhancing Constraint Propagation with Composition Operators", "description": "  Constraint propagation is a general algorithmic approach for pruning the\nsearch space of a CSP. In a uniform way, K. R. Apt has defined a computation as\nan iteration of reduction functions over a domain. He has also demonstrated the\nneed for integrating static properties of reduction functions (commutativity\nand semi-commutativity) to design specialized algorithms such as AC3 and DAC.\nWe introduce here a set of operators for modeling compositions of reduction\nfunctions. Two of the major goals are to tackle parallel computations, and\ndynamic behaviours (such as slow convergence).\n", "weight": 0.5674922466278076}, {"link": "http://arxiv.org/abs/cs/0301006v1", "name": "Temporal plannability by variance of the episode length", "description": "  Optimization of decision problems in stochastic environments is usually\nconcerned with maximizing the probability of achieving the goal and minimizing\nthe expected episode length. For interacting agents in time-critical\napplications, learning of the possibility of scheduling of subtasks (events) or\nthe full task is an additional relevant issue. Besides, there exist highly\nstochastic problems where the actual trajectories show great variety from\nepisode to episode, but completing the task takes almost the same amount of\ntime. The identification of sub-problems of this nature may promote e.g.,\nplanning, scheduling and segmenting Markov decision processes. In this work,\nformulae for the average duration as well as the standard deviation of the\nduration of events are derived. The emerging Bellman-type equation is a simple\nextension of Sobel's work (1982). Methods of dynamic programming as well as\nmethods of reinforcement learning can be applied for our extension. Computer\ndemonstration on a toy problem serve to highlight the principle.\n", "weight": 0.9836319088935852}], "algorithm": [{"link": "http://arxiv.org/abs/cs/9308101v1", "name": "Dynamic Backtracking", "description": "  Because of their occasional need to return to shallow points in a search\ntree, existing backtracking methods can sometimes erase meaningful progress\ntoward solving a search problem. In this paper, we present a method by which\nbacktrack points can be moved deeper in the search space, thereby avoiding this\ndifficulty. The technique developed is a variant of dependency-directed\nbacktracking that uses only polynomial space while still providing useful\ncontrol information and retaining the completeness guarantees provided by\nearlier approaches.\n", "weight": 0.9718677401542664}, {"link": "http://arxiv.org/abs/cs/9408102v1", "name": "Pattern Matching and Discourse Processing in Information Extraction from\n  Japanese Text", "description": "  Information extraction is the task of automatically picking up information of\ninterest from an unconstrained text. Information of interest is usually\nextracted in two steps. First, sentence level processing locates relevant\npieces of information scattered throughout the text; second, discourse\nprocessing merges coreferential information to generate the output. In the\nfirst step, pieces of information are locally identified without recognizing\nany relationships among them. A key word search or simple pattern search can\nachieve this purpose. The second step requires deeper knowledge in order to\nunderstand relationships among separately identified pieces of information.\nPrevious information extraction systems focused on the first step, partly\nbecause they were not required to link up each piece of information with other\npieces. To link the extracted pieces of information and map them onto a\nstructured output format, complex discourse processing is essential. This paper\nreports on a Japanese information extraction system that merges information\nusing a pattern matcher and discourse processor. Evaluation results show a high\nlevel of system performance which approaches human performance.\n", "weight": 0.9865649342536926}, {"link": "http://arxiv.org/abs/cs/9412102v1", "name": "Operations for Learning with Graphical Models", "description": "  This paper is a multidisciplinary review of empirical, statistical learning\nfrom a graphical model perspective. Well-known examples of graphical models\ninclude Bayesian networks, directed graphs representing a Markov chain, and\nundirected networks representing a Markov field. These graphical models are\nextended to model data analysis and empirical learning using the notation of\nplates. Graphical operations for simplifying and manipulating a problem are\nprovided including decomposition, differentiation, and the manipulation of\nprobability models from the exponential family. Two standard algorithm schemas\nfor learning are reviewed in a graphical framework: Gibbs sampling and the\nexpectation maximization algorithm. Using these operations and schemas, some\npopular algorithms can be synthesized from their graphical specification. This\nincludes versions of linear regression, techniques for feed-forward networks,\nand learning Gaussian and discrete Bayesian networks from data. The paper\nconcludes by sketching some implications for data analysis and summarizing how\nsome popular algorithms fall within the framework presented. The main original\ncontributions here are the decomposition techniques and the demonstration that\ngraphical models provide a framework for understanding and developing complex\nlearning algorithms.\n", "weight": 0.9874970316886902}, {"link": "http://arxiv.org/abs/cs/9503102v1", "name": "Cost-Sensitive Classification: Empirical Evaluation of a Hybrid Genetic\n  Decision Tree Induction Algorithm", "description": "  This paper introduces ICET, a new algorithm for cost-sensitive\nclassification. ICET uses a genetic algorithm to evolve a population of biases\nfor a decision tree induction algorithm. The fitness function of the genetic\nalgorithm is the average cost of classification when using the decision tree,\nincluding both the costs of tests (features, measurements) and the costs of\nclassification errors. ICET is compared here with three other algorithms for\ncost-sensitive classification - EG2, CS-ID3, and IDX - and also with C4.5,\nwhich classifies without regard to cost. The five algorithms are evaluated\nempirically on five real-world medical datasets. Three sets of experiments are\nperformed. The first set examines the baseline performance of the five\nalgorithms on the five datasets and establishes that ICET performs\nsignificantly better than its competitors. The second set tests the robustness\nof ICET under a variety of conditions and shows that ICET maintains its\nadvantage. The third set looks at ICET's search in bias space and discovers a\nway to improve the search.\n", "weight": 0.9847421050071716}, {"link": "http://arxiv.org/abs/cs/9508101v1", "name": "Using Qualitative Hypotheses to Identify Inaccurate Data", "description": "  Identifying inaccurate data has long been regarded as a significant and\ndifficult problem in AI. In this paper, we present a new method for identifying\ninaccurate data on the basis of qualitative correlations among related data.\nFirst, we introduce the definitions of related data and qualitative\ncorrelations among related data. Then we put forward a new concept called\nsupport coefficient function (SCF). SCF can be used to extract, represent, and\ncalculate qualitative correlations among related data within a dataset. We\npropose an approach to determining dynamic shift intervals of inaccurate data,\nand an approach to calculating possibility of identifying inaccurate data,\nrespectively. Both of the approaches are based on SCF. Finally we present an\nalgorithm for identifying inaccurate data by using qualitative correlations\namong related data as confirmatory or disconfirmatory evidence. We have\ndeveloped a practical system for interpreting infrared spectra by applying the\nmethod, and have fully tested the system against several hundred real spectra.\nThe experimental results show that the method is significantly better than the\nconventional methods used in many similar systems.\n", "weight": 0.9842069149017334}, {"link": "http://arxiv.org/abs/cs/9510102v1", "name": "Improving Connectionist Energy Minimization", "description": "  Symmetric networks designed for energy minimization such as Boltzman machines\nand Hopfield nets are frequently investigated for use in optimization,\nconstraint satisfaction and approximation of NP-hard problems. Nevertheless,\nfinding a global solution (i.e., a global minimum for the energy function) is\nnot guaranteed and even a local solution may take an exponential number of\nsteps. We propose an improvement to the standard local activation function used\nfor such networks. The improved algorithm guarantees that a global minimum is\nfound in linear time for tree-like subnetworks. The algorithm, called activate,\nis uniform and does not assume that the network is tree-like. It can identify\ntree-like subnetworks even in cyclic topologies (arbitrary networks) and avoid\nlocal minima along these trees. For acyclic networks, the algorithm is\nguaranteed to converge to a global minimum from any initial state of the system\n(self-stabilization) and remains correct under various types of schedulers. On\nthe negative side, we show that in the presence of cycles, no uniform algorithm\nexists that guarantees optimality even under a sequential asynchronous\nscheduler. An asynchronous scheduler can activate only one unit at a time while\na synchronous scheduler can activate any number of units in a single time step.\nIn addition, no uniform algorithm exists to optimize even acyclic networks when\nthe scheduler is synchronous. Finally, we show how the algorithm can be\nimproved using the cycle-cutset scheme. The general algorithm, called\nactivate-with-cutset, improves over activate and has some performance\nguarantees that are related to the size of the network's cycle-cutset.\n", "weight": 0.9886050820350647}, {"link": "http://arxiv.org/abs/cs/9601101v1", "name": "The Design and Experimental Analysis of Algorithms for Temporal\n  Reasoning", "description": "  Many applications -- from planning and scheduling to problems in molecular\nbiology -- rely heavily on a temporal reasoning component. In this paper, we\ndiscuss the design and empirical analysis of algorithms for a temporal\nreasoning system based on Allen's influential interval-based framework for\nrepresenting temporal information. At the core of the system are algorithms for\ndetermining whether the temporal information is consistent, and, if so, finding\none or more scenarios that are consistent with the temporal information. Two\nimportant algorithms for these tasks are a path consistency algorithm and a\nbacktracking algorithm. For the path consistency algorithm, we develop\ntechniques that can result in up to a ten-fold speedup over an already highly\noptimized implementation. For the backtracking algorithm, we develop variable\nand value ordering heuristics that are shown empirically to dramatically\nimprove the performance of the algorithm. As well, we show that a previously\nsuggested reformulation of the backtracking search problem can reduce the time\nand space requirements of the backtracking search. Taken together, the\ntechniques we develop allow a temporal reasoning component to solve problems\nthat are of practical size.\n", "weight": 0.9874968528747559}, {"link": "http://arxiv.org/abs/cs/9612101v1", "name": "Exploiting Causal Independence in Bayesian Network Inference", "description": "  A new method is proposed for exploiting causal independencies in exact\nBayesian network inference. A Bayesian network can be viewed as representing a\nfactorization of a joint probability into the multiplication of a set of\nconditional probabilities. We present a notion of causal independence that\nenables one to further factorize the conditional probabilities into a\ncombination of even smaller factors and consequently obtain a finer-grain\nfactorization of the joint probability. The new formulation of causal\nindependence lets us specify the conditional probability of a variable given\nits parents in terms of an associative and commutative operator, such as\n``or'', ``sum'' or ``max'', on the contribution of each parent. We start with a\nsimple algorithm VE for Bayesian network inference that, given evidence and a\nquery variable, uses the factorization to find the posterior distribution of\nthe query. We show how this algorithm can be extended to exploit causal\nindependence. Empirical studies, based on the CPCS networks for medical\ndiagnosis, show that this method is more efficient than previous methods and\nallows for inference in larger networks than previous algorithms.\n", "weight": 0.9873213768005371}, {"link": "http://arxiv.org/abs/cs/9701102v1", "name": "SCREEN: Learning a Flat Syntactic and Semantic Spoken Language Analysis\n  Using Artificial Neural Networks", "description": "  Previous approaches of analyzing spontaneously spoken language often have\nbeen based on encoding syntactic and semantic knowledge manually and\nsymbolically. While there has been some progress using statistical or\nconnectionist language models, many current spoken- language systems still use\na relatively brittle, hand-coded symbolic grammar or symbolic semantic\ncomponent. In contrast, we describe a so-called screening approach for learning\nrobust processing of spontaneously spoken language. A screening approach is a\nflat analysis which uses shallow sequences of category representations for\nanalyzing an utterance at various syntactic, semantic and dialog levels. Rather\nthan using a deeply structured symbolic analysis, we use a flat connectionist\nanalysis. This screening approach aims at supporting speech and language\nprocessing by using (1) data-driven learning and (2) robustness of\nconnectionist networks. In order to test this approach, we have developed the\nSCREEN system which is based on this new robust, learned and flat analysis. In\nthis paper, we focus on a detailed description of SCREEN's architecture, the\nflat syntactic and semantic analysis, the interaction with a speech recognizer,\nand a detailed evaluation analysis of the robustness under the influence of\nnoisy or incomplete input. The main result of this paper is that flat\nrepresentations allow more robust processing of spontaneous spoken language\nthan deeply structured representations. In particular, we show how the\nfault-tolerance and learning capability of connectionist networks can support a\nflat analysis for providing more robust spoken-language processing within an\noverall hybrid symbolic/connectionist framework.\n", "weight": 0.9899967908859253}, {"link": "http://arxiv.org/abs/cs/9705101v1", "name": "Query DAGs: A Practical Paradigm for Implementing Belief-Network\n  Inference", "description": "  We describe a new paradigm for implementing inference in belief networks,\nwhich consists of two steps: (1) compiling a belief network into an arithmetic\nexpression called a Query DAG (Q-DAG); and (2) answering queries using a simple\nevaluation algorithm. Each node of a Q-DAG represents a numeric operation, a\nnumber, or a symbol for evidence. Each leaf node of a Q-DAG represents the\nanswer to a network query, that is, the probability of some event of interest.\nIt appears that Q-DAGs can be generated using any of the standard algorithms\nfor exact inference in belief networks (we show how they can be generated using\nclustering and conditioning algorithms). The time and space complexity of a\nQ-DAG generation algorithm is no worse than the time complexity of the\ninference algorithm on which it is based. The complexity of a Q-DAG evaluation\nalgorithm is linear in the size of the Q-DAG, and such inference amounts to a\nstandard evaluation of the arithmetic expression it represents. The intended\nvalue of Q-DAGs is in reducing the software and hardware resources required to\nutilize belief networks in on-line, real-world applications. The proposed\nframework also facilitates the development of on-line inference on different\nsoftware and hardware platforms due to the simplicity of the Q-DAG evaluation\nalgorithm. Interestingly enough, Q-DAGs were found to serve other purposes:\nsimple techniques for reducing Q-DAGs tend to subsume relatively complex\noptimization techniques for belief-network inference, such as network-pruning\nand computation-caching.\n", "weight": 0.227755606174469}, {"link": "http://arxiv.org/abs/cs/9709102v1", "name": "Identifying Hierarchical Structure in Sequences: A linear-time algorithm", "description": "  SEQUITUR is an algorithm that infers a hierarchical structure from a sequence\nof discrete symbols by replacing repeated phrases with a grammatical rule that\ngenerates the phrase, and continuing this process recursively. The result is a\nhierarchical representation of the original sequence, which offers insights\ninto its lexical structure. The algorithm is driven by two constraints that\nreduce the size of the grammar, and produce structure as a by-product. SEQUITUR\nbreaks new ground by operating incrementally. Moreover, the method's simple\nstructure permits a proof that it operates in space and time that is linear in\nthe size of the input. Our implementation can process 50,000 symbols per second\nand has been applied to an extensive range of real world sequences.\n", "weight": 0.9790650010108948}, {"link": "http://arxiv.org/abs/cs/9712101v1", "name": "When Gravity Fails: Local Search Topology", "description": "  Local search algorithms for combinatorial search problems frequently\nencounter a sequence of states in which it is impossible to improve the value\nof the objective function; moves through these regions, called plateau moves,\ndominate the time spent in local search. We analyze and characterize plateaus\nfor three different classes of randomly generated Boolean Satisfiability\nproblems. We identify several interesting features of plateaus that impact the\nperformance of local search algorithms. We show that local minima tend to be\nsmall but occasionally may be very large. We also show that local minima can be\nescaped without unsatisfying a large number of clauses, but that systematically\nsearching for an escape route may be computationally expensive if the local\nminimum is large. We show that plateaus with exits, called benches, tend to be\nmuch larger than minima, and that some benches have very few exit states which\nlocal search can use to escape. We show that the solutions (i.e., global\nminima) of randomly generated problem instances form clusters, which behave\nsimilarly to local minima. We revisit several enhancements of local search\nalgorithms and explain their performance in light of our results. Finally we\ndiscuss strategies for creating the next generation of local search algorithms.\n", "weight": 0.9867623448371887}, {"link": "http://arxiv.org/abs/cs/9909003v1", "name": "Iterative Deepening Branch and Bound", "description": "  In tree search problem the best-first search algorithm needs too much of\nspace . To remove such drawbacks of these algorithms the IDA* was developed\nwhich is both space and time cost efficient. But again IDA* can give an optimal\nsolution for real valued problems like Flow shop scheduling, Travelling\nSalesman and 0/1 Knapsack due to their real valued cost estimates. Thus further\nmodifications are done on it and the Iterative Deepening Branch and Bound\nSearch Algorithms is developed which meets the requirements. We have tried\nusing this algorithm for the Flow Shop Scheduling Problem and have found that\nit is quite effective.\n", "weight": 0.4009191393852234}], "domain": [{"link": "http://arxiv.org/abs/cs/9603104v1", "name": "Active Learning with Statistical Models", "description": "  For many types of machine learning algorithms, one can compute the\nstatistically `optimal' way to select training data. In this paper, we review\nhow optimal data selection techniques have been used with feedforward neural\nnetworks. We then show how the same principles may be used to select data for\ntwo alternative, statistically-based learning architectures: mixtures of\nGaussians and locally weighted regression. While the techniques for neural\nnetworks are computationally expensive and approximate, the techniques for\nmixtures of Gaussians and locally weighted regression are both efficient and\naccurate. Empirically, we observe that the optimality criterion sharply\ndecreases the number of training examples the learner needs in order to achieve\ngood performance.\n", "weight": 0.9799932241439819}, {"link": "http://arxiv.org/abs/cs/9605104v1", "name": "Adaptive Problem-solving for Large-scale Scheduling Problems: A Case\n  Study", "description": "  Although most scheduling problems are NP-hard, domain specific techniques\nperform well in practice but are quite expensive to construct. In adaptive\nproblem-solving solving, domain specific knowledge is acquired automatically\nfor a general problem solver with a flexible control architecture. In this\napproach, a learning system explores a space of possible heuristic methods for\none well-suited to the eccentricities of the given domain and problem\ndistribution. In this article, we discuss an application of the approach to\nscheduling satellite communications. Using problem distributions based on\nactual mission requirements, our approach identifies strategies that not only\ndecrease the amount of CPU time required to produce schedules, but also\nincrease the percentage of problems that are solvable within computational\nresource limitations.\n", "weight": 0.9819955825805664}, {"link": "http://arxiv.org/abs/cs/9706101v1", "name": "Flaw Selection Strategies for Partial-Order Planning", "description": "  Several recent studies have compared the relative efficiency of alternative\nflaw selection strategies for partial-order causal link (POCL) planning. We\nreview this literature, and present new experimental results that generalize\nthe earlier work and explain some of the discrepancies in it. In particular, we\ndescribe the Least-Cost Flaw Repair (LCFR) strategy developed and analyzed by\nJoslin and Pollack (1994), and compare it with other strategies, including\nGerevini and Schubert's (1996) ZLIFO strategy. LCFR and ZLIFO make very\ndifferent, and apparently conflicting claims about the most effective way to\nreduce search-space size in POCL planning. We resolve this conflict, arguing\nthat much of the benefit that Gerevini and Schubert ascribe to the LIFO\ncomponent of their ZLIFO strategy is better attributed to other causes. We show\nthat for many problems, a strategy that combines least-cost flaw selection with\nthe delay of separable threats will be effective in reducing search-space size,\nand will do so without excessive computational overhead. Although such a\nstrategy thus provides a good default, we also show that certain domain\ncharacteristics may reduce its effectiveness.\n", "weight": 0.9863601326942444}, {"link": "http://arxiv.org/abs/cs/9711102v1", "name": "Storing and Indexing Plan Derivations through Explanation-based Analysis\n  of Retrieval Failures", "description": "  Case-Based Planning (CBP) provides a way of scaling up domain-independent\nplanning to solve large problems in complex domains. It replaces the detailed\nand lengthy search for a solution with the retrieval and adaptation of previous\nplanning experiences. In general, CBP has been demonstrated to improve\nperformance over generative (from-scratch) planning. However, the performance\nimprovements it provides are dependent on adequate judgements as to problem\nsimilarity. In particular, although CBP may substantially reduce planning\neffort overall, it is subject to a mis-retrieval problem. The success of CBP\ndepends on these retrieval errors being relatively rare. This paper describes\nthe design and implementation of a replay framework for the case-based planner\nDERSNLP+EBL. DERSNLP+EBL extends current CBP methodology by incorporating\nexplanation-based learning techniques that allow it to explain and learn from\nthe retrieval failures it encounters. These techniques are used to refine\njudgements about case similarity in response to feedback when a wrong decision\nhas been made. The same failure analysis is used in building the case library,\nthrough the addition of repairing cases. Large problems are split and stored as\nsingle goal subproblems. Multi-goal problems are stored only when these smaller\ncases fail to be merged into a full solution. An empirical evaluation of this\napproach demonstrates the advantage of learning from experienced retrieval\nfailure.\n", "weight": 0.875012993812561}, {"link": "http://arxiv.org/abs/cs/9803101v1", "name": "Synthesizing Customized Planners from Specifications", "description": "  Existing plan synthesis approaches in artificial intelligence fall into two\ncategories -- domain independent and domain dependent. The domain independent\napproaches are applicable across a variety of domains, but may not be very\nefficient in any one given domain. The domain dependent approaches need to be\n(re)designed for each domain separately, but can be very efficient in the\ndomain for which they are designed. One enticing alternative to these\napproaches is to automatically synthesize domain independent planners given the\nknowledge about the domain and the theory of planning. In this paper, we\ninvestigate the feasibility of using existing automated software synthesis\ntools to support such synthesis. Specifically, we describe an architecture\ncalled CLAY in which the Kestrel Interactive Development System (KIDS) is used\nto derive a domain-customized planner through a semi-automatic combination of a\ndeclarative theory of planning, and the declarative control knowledge specific\nto a given domain, to semi-automatically combine them to derive\ndomain-customized planners. We discuss what it means to write a declarative\ntheory of planning and control knowledge for KIDS, and illustrate our approach\nby generating a class of domain-specific planners using state space\nrefinements. Our experiments show that the synthesized planners can outperform\nclassical refinement planners (implemented as instantiations of UCP,\nKambhampati & Srivastava, 1995), using the same control knowledge. We will\ncontrast the costs and benefits of the synthesis approach with conventional\nmethods for customizing domain independent planners.\n", "weight": 0.990524172782898}, {"link": "http://arxiv.org/abs/cs/9806102v1", "name": "A Selective Macro-learning Algorithm and its Application to the NxN\n  Sliding-Tile Puzzle", "description": "  One of the most common mechanisms used for speeding up problem solvers is\nmacro-learning. Macros are sequences of basic operators acquired during problem\nsolving. Macros are used by the problem solver as if they were basic operators.\nThe major problem that macro-learning presents is the vast number of macros\nthat are available for acquisition. Macros increase the branching factor of the\nsearch space and can severely degrade problem-solving efficiency. To make macro\nlearning useful, a program must be selective in acquiring and utilizing macros.\nThis paper describes a general method for selective acquisition of macros.\nSolvable training problems are generated in increasing order of difficulty. The\nonly macros acquired are those that take the problem solver out of a local\nminimum to a better state. The utility of the method is demonstrated in several\ndomains, including the domain of NxN sliding-tile puzzles. After learning on\nsmall puzzles, the system is able to efficiently solve puzzles of any size.\n", "weight": 0.8519530296325684}, {"link": "http://arxiv.org/abs/cs/9812017v1", "name": "A reusable iterative optimization software library to solve\n  combinatorial problems with approximate reasoning", "description": "  Real world combinatorial optimization problems such as scheduling are\ntypically too complex to solve with exact methods. Additionally, the problems\noften have to observe vaguely specified constraints of different importance,\nthe available data may be uncertain, and compromises between antagonistic\ncriteria may be necessary. We present a combination of approximate reasoning\nbased constraints and iterative optimization based heuristics that help to\nmodel and solve such problems in a framework of C++ software libraries called\nStarFLIP++. While initially developed to schedule continuous caster units in\nsteel plants, we present in this paper results from reusing the library\ncomponents in a shift scheduling system for the workforce of an industrial\nproduction plant.\n", "weight": 0.978564977645874}, {"link": "http://arxiv.org/abs/cs/0207059v1", "name": "Value Based Argumentation Frameworks", "description": "  This paper introduces the notion of value-based argumentation frameworks, an\nextension of the standard argumentation frameworks proposed by Dung, which are\nable toshow how rational decision is possible in cases where arguments derive\ntheir force from the social values their acceptance would promote.\n", "weight": 0.954986572265625}, {"link": "http://arxiv.org/abs/cs/0211038v1", "name": "Dynamic Adjustment of the Motivation Degree in an Action Selection\n  Mechanism", "description": "  This paper presents a model for dynamic adjustment of the motivation degree,\nusing a reinforcement learning approach, in an action selection mechanism\npreviously developed by the authors. The learning takes place in the\nmodification of a parameter of the model of combination of internal and\nexternal stimuli. Experiments that show the claimed properties are presented,\nusing a VR simulation developed for such purposes. The importance of adaptation\nby learning in action selection is also discussed.\n", "weight": 0.9678506851196289}, {"link": "http://arxiv.org/abs/cs/0211039v1", "name": "Action Selection Properties in a Software Simulated Agent", "description": "  This article analyses the properties of the Internal Behaviour network, an\naction selection mechanism previously proposed by the authors, with the aid of\na simulation developed for such ends. A brief review of the Internal Behaviour\nnetwork is followed by the explanation of the implementation of the simulation.\nThen, experiments are presented and discussed analysing the properties of the\naction selection in the proposed model.\n", "weight": 0.965377151966095}, {"link": "http://arxiv.org/abs/cs/0211040v1", "name": "A Model for Combination of External and Internal Stimuli in the Action\n  Selection of an Autonomous Agent", "description": "  This paper proposes a model for combination of external and internal stimuli\nfor the action selection in an autonomous agent, based in an action selection\nmechanism previously proposed by the authors. This combination model includes\nadditive and multiplicative elements, which allows to incorporate new\nproperties, which enhance the action selection. A given parameter a, which is\npart of the proposed model, allows to regulate the degree of dependence of the\nobserved external behaviour from the internal states of the entity.\n", "weight": 0.9699925780296326}], "logic": [{"link": "http://arxiv.org/abs/cs/9406101v1", "name": "A Semantics and Complete Algorithm for Subsumption in the CLASSIC\n  Description Logic", "description": "  This paper analyzes the correctness of the subsumption algorithm used in\nCLASSIC, a description logic-based knowledge representation system that is\nbeing used in practical applications. In order to deal efficiently with\nindividuals in CLASSIC descriptions, the developers have had to use an\nalgorithm that is incomplete with respect to the standard, model-theoretic\nsemantics for description logics. We provide a variant semantics for\ndescriptions with respect to which the current implementation is complete, and\nwhich can be independently motivated. The soundness and completeness of the\npolynomial-time subsumption algorithm is established using description graphs,\nwhich are an abstracted version of the implementation structures used in\nCLASSIC, and are of independent interest.\n", "weight": 0.08557627350091934}, {"link": "http://arxiv.org/abs/cs/9604101v1", "name": "A Divergence Critic for Inductive Proof", "description": "  Inductive theorem provers often diverge. This paper describes a simple\ncritic, a computer program which monitors the construction of inductive proofs\nattempting to identify diverging proof attempts. Divergence is recognized by\nmeans of a ``difference matching'' procedure. The critic then proposes lemmas\nand generalizations which ``ripple'' these differences away so that the proof\ncan go through without divergence. The critic enables the theorem prover Spike\nto prove many theorems completely automatically from the definitions alone.\n", "weight": 0.9590798020362854}, {"link": "http://arxiv.org/abs/cs/9604102v1", "name": "Practical Methods for Proving Termination of General Logic Programs", "description": "  Termination of logic programs with negated body atoms (here called general\nlogic programs) is an important topic. One reason is that many computational\nmechanisms used to process negated atoms, like Clark's negation as failure and\nChan's constructive negation, are based on termination conditions. This paper\nintroduces a methodology for proving termination of general logic programs\nw.r.t. the Prolog selection rule. The idea is to distinguish parts of the\nprogram depending on whether or not their termination depends on the selection\nrule. To this end, the notions of low-, weakly up-, and up-acceptable program\nare introduced. We use these notions to develop a methodology for proving\ntermination of general logic programs, and show how interesting problems in\nnon-monotonic reasoning can be formalized and implemented by means of\nterminating general logic programs.\n", "weight": 0.35543033480644226}, {"link": "http://arxiv.org/abs/cs/9612103v1", "name": "Characterizations of Decomposable Dependency Models", "description": "  Decomposable dependency models possess a number of interesting and useful\nproperties. This paper presents new characterizations of decomposable models in\nterms of independence relationships, which are obtained by adding a single\naxiom to the well-known set characterizing dependency models that are\nisomorphic to undirected graphs. We also briefly discuss a potential\napplication of our results to the problem of learning graphical models from\ndata.\n", "weight": 0.1725127398967743}, {"link": "http://arxiv.org/abs/cs/9703101v1", "name": "A Uniform Framework for Concept Definitions in Description Logics", "description": "  Most modern formalisms used in Databases and Artificial Intelligence for\ndescribing an application domain are based on the notions of class (or concept)\nand relationship among classes. One interesting feature of such formalisms is\nthe possibility of defining a class, i.e., providing a set of properties that\nprecisely characterize the instances of the class. Many recent articles point\nout that there are several ways of assigning a meaning to a class definition\ncontaining some sort of recursion. In this paper, we argue that, instead of\nchoosing a single style of semantics, we achieve better results by adopting a\nformalism that allows for different semantics to coexist. We demonstrate the\nfeasibility of our argument, by presenting a knowledge representation\nformalism, the description logic muALCQ, with the above characteristics. In\naddition to the constructs for conjunction, disjunction, negation, quantifiers,\nand qualified number restrictions, muALCQ includes special fixpoint constructs\nto express (suitably interpreted) recursive definitions. These constructs\nenable the usual frame-based descriptions to be combined with definitions of\nrecursive data structures such as directed acyclic graphs, lists, streams, etc.\nWe establish several properties of muALCQ, including the decidability and the\ncomputational complexity of reasoning, by formulating a correspondence with a\nparticular modal logic of programs called the modal mu-calculus.\n", "weight": 0.04726973921060562}, {"link": "http://arxiv.org/abs/cs/9801102v1", "name": "Monotonicity and Persistence in Preferential Logics", "description": "  An important characteristic of many logics for Artificial Intelligence is\ntheir nonmonotonicity. This means that adding a formula to the premises can\ninvalidate some of the consequences. There may, however, exist formulae that\ncan always be safely added to the premises without destroying any of the\nconsequences: we say they respect monotonicity. Also, there may be formulae\nthat, when they are a consequence, can not be invalidated when adding any\nformula to the premises: we call them conservative. We study these two classes\nof formulae for preferential logics, and show that they are closely linked to\nthe formulae whose truth-value is preserved along the (preferential) ordering.\nWe will consider some preferential logics for illustration, and prove syntactic\ncharacterization results for them. The results in this paper may improve the\nefficiency of theorem provers for preferential logics.\n", "weight": 0.4405210614204407}, {"link": "http://arxiv.org/abs/cs/9911012v2", "name": "Cox's Theorem Revisited", "description": "  The assumptions needed to prove Cox's Theorem are discussed and examined.\nVarious sets of assumptions under which a Cox-style theorem can be proved are\nprovided, although all are rather strong and, arguably, not natural.\n", "weight": 0.9356974363327026}, {"link": "http://arxiv.org/abs/cs/0003024v1", "name": "A Compiler for Ordered Logic Programs", "description": "  This paper describes a system, called PLP, for compiling ordered logic\nprograms into standard logic programs under the answer set semantics. In an\nordered logic program, rules are named by unique terms, and preferences among\nrules are given by a set of dedicated atoms. An ordered logic program is\ntransformed into a second, regular, extended logic program wherein the\npreferences are respected, in that the answer sets obtained in the transformed\ntheory correspond with the preferred answer sets of the original theory. Since\nthe result of the translation is an extended logic program, existing logic\nprogramming systems can be used as underlying reasoning engine. In particular,\nPLP is conceived as a front-end to the logic programming systems dlv and\nsmodels.\n", "weight": 0.9847442507743835}, {"link": "http://arxiv.org/abs/cs/0003028v1", "name": "Logic Programs with Compiled Preferences", "description": "  We describe an approach for compiling preferences into logic programs under\nthe answer set semantics. An ordered logic program is an extended logic program\nin which rules are named by unique terms, and in which preferences among rules\nare given by a set of dedicated atoms. An ordered logic program is transformed\ninto a second, regular, extended logic program wherein the preferences are\nrespected, in that the answer sets obtained in the transformed theory\ncorrespond with the preferred answer sets of the original theory. Our approach\nallows both the specification of static orderings (as found in most previous\nwork), in which preferences are external to a logic program, as well as\norderings on sets of rules. In large part then, we are interested in describing\na general methodology for uniformly incorporating preference information in a\nlogic program. Since the result of our translation is an extended logic\nprogram, we can make use of existing implementations, such as dlv and smodels.\nTo this end, we have developed a compiler, available on the web, as a front-end\nfor these programming systems.\n", "weight": 0.9887482523918152}, {"link": "http://arxiv.org/abs/cs/0003038v1", "name": "A Splitting Set Theorem for Epistemic Specifications", "description": "  Over the past decade a considerable amount of research has been done to\nexpand logic programming languages to handle incomplete information. One such\nlanguage is the language of epistemic specifications. As is usual with logic\nprogramming languages, the problem of answering queries is intractable in the\ngeneral case. For extended disjunctive logic programs, an idea that has proven\nuseful in simplifying the investigation of answer sets is the use of splitting\nsets. In this paper we will present an extended definition of splitting sets\nthat will be applicable to epistemic specifications. Furthermore, an extension\nof the splitting set theorem will be presented. Also, a characterization of\nstratified epistemic specifications will be given in terms of splitting sets.\nThis characterization leads us to an algorithmic method of computing world\nviews of a subclass of epistemic logic programs.\n", "weight": 0.9839246869087219}, {"link": "http://arxiv.org/abs/cs/0003042v1", "name": "Fages' Theorem and Answer Set Programming", "description": "  We generalize a theorem by Francois Fages that describes the relationship\nbetween the completion semantics and the answer set semantics for logic\nprograms with negation as failure. The study of this relationship is important\nin connection with the emergence of answer set programming. Whenever the two\nsemantics are equivalent, answer sets can be computed by a satisfiability\nsolver, and the use of answer set solvers such as smodels and dlv is\nunnecessary. A logic programming representation of the blocks world due to\nIlkka Niemelae is discussed as an example.\n", "weight": 0.6758663058280945}, {"link": "http://arxiv.org/abs/cs/0005031v3", "name": "Conditional Plausibility Measures and Bayesian Networks", "description": "  A general notion of algebraic conditional plausibility measures is defined.\nProbability measures, ranking functions, possibility measures, and (under the\nappropriate definitions) sets of probability measures can all be viewed as\ndefining algebraic conditional plausibility measures. It is shown that\nalgebraic conditional plausibility measures can be represented using Bayesian\nnetworks.\n", "weight": 0.3565782904624939}, {"link": "http://arxiv.org/abs/cs/0010037v1", "name": "On the relationship between fuzzy logic and four-valued relevance logic", "description": "  In fuzzy propositional logic, to a proposition a partial truth in [0,1] is\nassigned. It is well known that under certain circumstances, fuzzy logic\ncollapses to classical logic. In this paper, we will show that under dual\nconditions, fuzzy logic collapses to four-valued (relevance) logic, where\npropositions have truth-value true, false, unknown, or contradiction. As a\nconsequence, fuzzy entailment may be considered as ``in between'' four-valued\n(relevance) entailment and classical entailment.\n", "weight": 0.3257231116294861}, {"link": "http://arxiv.org/abs/cs/0203002v1", "name": "Another perspective on Default Reasoning", "description": "  The lexicographic closure of any given finite set D of normal defaults is\ndefined. A conditional assertion \"if a then b\" is in this lexicographic closure\nif, given the defaults D and the fact a, one would conclude b. The\nlexicographic closure is essentially a rational extension of D, and of its\nrational closure, defined in a previous paper. It provides a logic of normal\ndefaults that is different from the one proposed by R. Reiter and that is rich\nenough not to require the consideration of non-normal defaults. A large number\nof examples are provided to show that the lexicographic closure corresponds to\nthe basic intuitions behind Reiter's logic of defaults.\n", "weight": 0.5719047784805298}, {"link": "http://arxiv.org/abs/cs/0203005v2", "name": "A Framework for Compiling Preferences in Logic Programs", "description": "  We introduce a methodology and framework for expressing general preference\ninformation in logic programming under the answer set semantics. An ordered\nlogic program is an extended logic program in which rules are named by unique\nterms, and in which preferences among rules are given by a set of atoms of form\ns < t where s and t are names. An ordered logic program is transformed into a\nsecond, regular, extended logic program wherein the preferences are respected,\nin that the answer sets obtained in the transformed program correspond with the\npreferred answer sets of the original program. Our approach allows the\nspecification of dynamic orderings, in which preferences can appear arbitrarily\nwithin a program. Static orderings (in which preferences are external to a\nlogic program) are a trivial restriction of the general dynamic case. First, we\ndevelop a specific approach to reasoning with preferences, wherein the\npreference ordering specifies the order in which rules are to be applied. We\nthen demonstrate the wide range of applicability of our framework by showing\nhow other approaches, among them that of Brewka and Eiter, can be captured\nwithin our framework. Since the result of each of these transformations is an\nextended logic program, we can make use of existing implementations, such as\ndlv and smodels. To this end, we have developed a publicly available compiler\nas a front-end for these programming systems.\n", "weight": 0.9338168501853943}, {"link": "http://arxiv.org/abs/cs/0203007v1", "name": "Two results for proiritized logic programming", "description": "  Prioritized default reasoning has illustrated its rich expressiveness and\nflexibility in knowledge representation and reasoning. However, many important\naspects of prioritized default reasoning have yet to be thoroughly explored. In\nthis paper, we investigate two properties of prioritized logic programs in the\ncontext of answer set semantics. Specifically, we reveal a close relationship\nbetween mutual defeasibility and uniqueness of the answer set for a prioritized\nlogic program. We then explore how the splitting technique for extended logic\nprograms can be extended to prioritized logic programs. We prove splitting\ntheorems that can be used to simplify the evaluation of a prioritized logic\nprogram under certain conditions.\n", "weight": 0.6294942498207092}, {"link": "http://arxiv.org/abs/cs/0207030v2", "name": "Collective Argumentation", "description": "  An extension of an abstract argumentation framework, called collective\nargumentation, is introduced in which the attack relation is defined directly\namong sets of arguments. The extension turns out to be suitable, in particular,\nfor representing semantics of disjunctive logic programs. Two special kinds of\ncollective argumentation are considered in which the opponents can share their\narguments.\n", "weight": 0.680743396282196}, {"link": "http://arxiv.org/abs/cs/0207042v1", "name": "Logic Programming with Ordered Disjunction", "description": "  Logic programs with ordered disjunction (LPODs) combine ideas underlying\nQualitative Choice Logic (Brewka et al. KR 2002) and answer set programming.\nLogic programming under answer set semantics is extended with a new connective\ncalled ordered disjunction. The new connective allows us to represent\nalternative, ranked options for problem solutions in the heads of rules: A\n\\times B intuitively means: if possible A, but if A is not possible then at\nleast B. The semantics of logic programs with ordered disjunction is based on a\npreference relation on answer sets. LPODs are useful for applications in design\nand configuration and can serve as a basis for qualitative decision making.\n", "weight": 0.5934677124023438}, {"link": "http://arxiv.org/abs/cs/0207065v1", "name": "Embedding Default Logic in Propositional Argumentation Systems", "description": "  In this paper we present a transformation of finite propositional default\ntheories into so-called propositional argumentation systems. This\ntransformation allows to characterize all notions of Reiter's default logic in\nthe framework of argumentation systems. As a consequence, computing extensions,\nor determining wether a given formula belongs to one extension or all\nextensions can be answered without leaving the field of classical propositional\nlogic. The transformation proposed is linear in the number of defaults.\n", "weight": 0.9742795825004578}, {"link": "http://arxiv.org/abs/cs/0209019v1", "name": "Reasoning about Evolving Nonmonotonic Knowledge Bases", "description": "  Recently, several approaches to updating knowledge bases modeled as extended\nlogic programs have been introduced, ranging from basic methods to incorporate\n(sequences of) sets of rules into a logic program, to more elaborate methods\nwhich use an update policy for specifying how updates must be incorporated. In\nthis paper, we introduce a framework for reasoning about evolving knowledge\nbases, which are represented as extended logic programs and maintained by an\nupdate policy. We first describe a formal model which captures various update\napproaches, and we define a logical language for expressing properties of\nevolving knowledge bases. We then investigate semantical and computational\nproperties of our framework, where we focus on properties of knowledge states\nwith respect to the canonical reasoning task of whether a given formula holds\non a given evolving knowledge base. In particular, we present finitary\ncharacterizations of the evolution for certain classes of framework instances,\nwhich can be exploited for obtaining decidability results. In more detail, we\ncharacterize the complexity of reasoning for some meaningful classes of\nevolving knowledge bases, ranging from polynomial to double exponential space\ncomplexity.\n", "weight": 0.1254405528306961}, {"link": "http://arxiv.org/abs/cs/0301010v2", "name": "Comparisons and Computation of Well-founded Semantics for Disjunctive\n  Logic Programs", "description": "  Much work has been done on extending the well-founded semantics to general\ndisjunctive logic programs and various approaches have been proposed. However,\nthese semantics are different from each other and no consensus is reached about\nwhich semantics is the most intended. In this paper we look at disjunctive\nwell-founded reasoning from different angles. We show that there is an\nintuitive form of the well-founded reasoning in disjunctive logic programming\nwhich can be characterized by slightly modifying some exisitng approaches to\ndefining disjunctive well-founded semantics, including program transformations,\nargumentation, unfounded sets (and resolution-like procedure). We also provide\na bottom-up procedure for this semantics. The significance of our work is not\nonly in clarifying the relationship among different approaches, but also shed\nsome light on what is an intended well-founded semantics for disjunctive logic\nprograms.\n", "weight": 0.4984259009361267}], "operation": [{"link": "http://arxiv.org/abs/cs/9309101v1", "name": "An Empirical Analysis of Search in GSAT", "description": "  We describe an extensive study of search in GSAT, an approximation procedure\nfor propositional satisfiability. GSAT performs greedy hill-climbing on the\nnumber of satisfied clauses in a truth assignment. Our experiments provide a\nmore complete picture of GSAT's search than previous accounts. We describe in\ndetail the two phases of search: rapid hill-climbing followed by a long plateau\nsearch. We demonstrate that when applied to randomly generated 3SAT problems,\nthere is a very simple scaling with problem size for both the mean number of\nsatisfied clauses and the mean branching rate. Our results allow us to make\ndetailed numerical conjectures about the length of the hill-climbing phase, the\naverage gradient of this phase, and to conjecture that both the average score\nand average branching rate decay exponentially during plateau search. We end by\nshowing how these results can be used to direct future theoretical analysis.\nThis work provides a case study of how computer experiments can be used to\nimprove understanding of the theoretical properties of algorithms.\n", "weight": 0.9014637470245361}, {"link": "http://arxiv.org/abs/cs/9403101v1", "name": "Exploring the Decision Forest: An Empirical Investigation of Occam's\n  Razor in Decision Tree Induction", "description": "  We report on a series of experiments in which all decision trees consistent\nwith the training data are constructed. These experiments were run to gain an\nunderstanding of the properties of the set of consistent decision trees and the\nfactors that affect the accuracy of individual trees. In particular, we\ninvestigated the relationship between the size of a decision tree consistent\nwith some training data and the accuracy of the tree on test data. The\nexperiments were performed on a massively parallel Maspar computer. The results\nof the experiments on several artificial and two real world problems indicate\nthat, for many of the problems investigated, smaller consistent decision trees\nare on average less accurate than the average accuracy of slightly larger\ntrees.\n", "weight": 0.984207808971405}, {"link": "http://arxiv.org/abs/cs/9505101v1", "name": "Using Pivot Consistency to Decompose and Solve Functional CSPs", "description": "  Many studies have been carried out in order to increase the search efficiency\nof constraint satisfaction problems; among them, some make use of structural\nproperties of the constraint network; others take into account semantic\nproperties of the constraints, generally assuming that all the constraints\npossess the given property. In this paper, we propose a new decomposition\nmethod benefiting from both semantic properties of functional constraints (not\nbijective constraints) and structural properties of the network; furthermore,\nnot all the constraints need to be functional. We show that under some\nconditions, the existence of solutions can be guaranteed. We first characterize\na particular subset of the variables, which we name a root set. We then\nintroduce pivot consistency, a new local consistency which is a weak form of\npath consistency and can be achieved in O(n^2d^2) complexity (instead of\nO(n^3d^3) for path consistency), and we present associated properties; in\nparticular, we show that any consistent instantiation of the root set can be\nlinearly extended to a solution, which leads to the presentation of the\naforementioned new method for solving by decomposing functional CSPs.\n", "weight": 0.986360490322113}, {"link": "http://arxiv.org/abs/cs/9512104v1", "name": "Decision-Theoretic Foundations for Causal Reasoning", "description": "  We present a definition of cause and effect in terms of decision-theoretic\nprimitives and thereby provide a principled foundation for causal reasoning.\nOur definition departs from the traditional view of causation in that causal\nassertions may vary with the set of decisions available. We argue that this\napproach provides added clarity to the notion of cause. Also in this paper, we\nexamine the encoding of causal relationships in directed acyclic graphs. We\ndescribe a special class of influence diagrams, those in canonical form, and\nshow its relationship to Pearl's representation of cause and effect. Finally,\nwe show how canonical form facilitates counterfactual reasoning.\n", "weight": 0.9763091206550598}, {"link": "http://arxiv.org/abs/cs/9706102v1", "name": "A Complete Classification of Tractability in RCC-5", "description": "  We investigate the computational properties of the spatial algebra RCC-5\nwhich is a restricted version of the RCC framework for spatial reasoning. The\nsatisfiability problem for RCC-5 is known to be NP-complete but not much is\nknown about its approximately four billion subclasses. We provide a complete\nclassification of satisfiability for all these subclasses into polynomial and\nNP-complete respectively. In the process, we identify all maximal tractable\nsubalgebras which are four in total.\n", "weight": 0.9653770327568054}, {"link": "http://arxiv.org/abs/cs/9711103v1", "name": "A Model Approximation Scheme for Planning in Partially Observable\n  Stochastic Domains", "description": "  Partially observable Markov decision processes (POMDPs) are a natural model\nfor planning problems where effects of actions are nondeterministic and the\nstate of the world is not completely observable. It is difficult to solve\nPOMDPs exactly. This paper proposes a new approximation scheme. The basic idea\nis to transform a POMDP into another one where additional information is\nprovided by an oracle. The oracle informs the planning agent that the current\nstate of the world is in a certain region. The transformed POMDP is\nconsequently said to be region observable. It is easier to solve than the\noriginal POMDP. We propose to solve the transformed POMDP and use its optimal\npolicy to construct an approximate policy for the original POMDP. By\ncontrolling the amount of additional information that the oracle provides, it\nis possible to find a proper tradeoff between computational time and\napproximation quality. In terms of algorithmic contributions, we study in\ndetails how to exploit region observability in solving the transformed POMDP.\nTo facilitate the study, we also propose a new exact algorithm for general\nPOMDPs. The algorithm is conceptually simple and yet is significantly more\nefficient than all previous exact algorithms.\n", "weight": 0.9022269248962402}, {"link": "http://arxiv.org/abs/cs/9811024v1", "name": "The Essence of Constraint Propagation", "description": "  We show that several constraint propagation algorithms (also called (local)\nconsistency, consistency enforcing, Waltz, filtering or narrowing algorithms)\nare instances of algorithms that deal with chaotic iteration. To this end we\npropose a simple abstract framework that allows us to classify and compare\nthese algorithms and to establish in a uniform way their basic properties.\n", "weight": 0.9624903202056885}, {"link": "http://arxiv.org/abs/cs/0002003v1", "name": "On the accuracy and running time of GSAT", "description": "  Randomized algorithms for deciding satisfiability were shown to be effective\nin solving problems with thousands of variables. However, these algorithms are\nnot complete. That is, they provide no guarantee that a satisfying assignment,\nif one exists, will be found. Thus, when studying randomized algorithms, there\nare two important characteristics that need to be considered: the running time\nand, even more importantly, the accuracy --- a measure of likelihood that a\nsatisfying assignment will be found, provided one exists. In fact, we argue\nthat without a reference to the accuracy, the notion of the running time for\nrandomized algorithms is not well-defined. In this paper, we introduce a formal\nnotion of accuracy. We use it to define a concept of the running time. We use\nboth notions to study the random walk strategy GSAT algorithm. We investigate\nthe dependence of accuracy on properties of input formulas such as\nclause-to-variable ratio and the number of satisfying assignments. We\ndemonstrate that the running time of GSAT grows exponentially in the number of\nvariables of the input formula for randomly generated 3-CNF formulas and for\nthe formulas encoding 3- and 4-colorability of graphs.\n", "weight": 0.13986217975616455}, {"link": "http://arxiv.org/abs/cs/0003023v1", "name": "Probabilistic Default Reasoning with Conditional Constraints", "description": "  We propose a combination of probabilistic reasoning from conditional\nconstraints with approaches to default reasoning from conditional knowledge\nbases. In detail, we generalize the notions of Pearl's entailment in system Z,\nLehmann's lexicographic entailment, and Geffner's conditional entailment to\nconditional constraints. We give some examples that show that the new notions\nof z-, lexicographic, and conditional entailment have similar properties like\ntheir classical counterparts. Moreover, we show that the new notions of z-,\nlexicographic, and conditional entailment are proper generalizations of both\ntheir classical counterparts and the classical notion of logical entailment for\nconditional constraints.\n", "weight": 0.9445491433143616}, {"link": "http://arxiv.org/abs/cs/0003080v1", "name": "Some Remarks on Boolean Constraint Propagation", "description": "  We study here the well-known propagation rules for Boolean constraints. First\nwe propose a simple notion of completeness for sets of such rules and establish\na completeness result. Then we show an equivalence in an appropriate sense\nbetween Boolean constraint propagation and unit propagation, a form of\nresolution for propositional logic.\n  Subsequently we characterize one set of such rules by means of the notion of\nhyper-arc consistency introduced in (Mohr and Masini 1988). Also, we clarify\nthe status of a similar, though different, set of rules introduced in (Simonis\n1989a) and more fully in (Codognet and Diaz 1996).\n", "weight": 0.3917389214038849}, {"link": "http://arxiv.org/abs/cs/0202031v1", "name": "Nonmonotonic inference operations", "description": "  A. Tarski proposed the study of infinitary consequence operations as the\ncentral topic of mathematical logic. He considered monotonicity to be a\nproperty of all such operations. In this paper, we weaken the monotonicity\nrequirement and consider more general operations, inference operations. These\noperations describe the nonmonotonic logics both humans and machines seem to be\nusing when infering defeasible information from incomplete knowledge. We single\nout a number of interesting families of inference operations. This study of\ninfinitary inference operations is inspired by the results of Kraus, Lehmann\nand Magidor on finitary nonmonotonic operations, but this paper is\nself-contained.\n", "weight": 0.9763099551200867}, {"link": "http://arxiv.org/abs/cs/0202033v1", "name": "The logical meaning of Expansion", "description": "  The Expansion property considered by researchers in Social Choice is shown to\ncorrespond to a logical property of nonmonotonic consequence relations that is\nthe {\\em pure}, i.e., not involving connectives, version of a previously known\nweak rationality condition. The assumption that the union of two definable sets\nof models is definable is needed for the soundness part of the result.\n", "weight": 0.6885581016540527}, {"link": "http://arxiv.org/abs/cs/0203003v1", "name": "Deductive Nonmonotonic Inference Operations: Antitonic Representations", "description": "  We provide a characterization of those nonmonotonic inference operations C\nfor which C(X) may be described as the set of all logical consequences of X\ntogether with some set of additional assumptions S(X) that depends\nanti-monotonically on X (i.e., X is a subset of Y implies that S(Y) is a subset\nof S(X)). The operations represented are exactly characterized in terms of\nproperties most of which have been studied in Freund-Lehmann(cs.AI/0202031).\nSimilar characterizations of right-absorbing and cumulative operations are also\nprovided. For cumulative operations, our results fit in closely with those of\nFreund. We then discuss extending finitary operations to infinitary operations\nin a canonical way and discuss co-compactness properties. Our results provide a\nsatisfactory notion of pseudo-compactness, generalizing to deductive\nnonmonotonic operations the notion of compactness for monotonic operations.\nThey also provide an alternative, more elegant and more general, proof of the\nexistence of an infinitary deductive extension for any finitary deductive\noperation (Theorem 7.9 of Freund-Lehmann).\n", "weight": 0.8083623051643372}, {"link": "http://arxiv.org/abs/cs/0205014v1", "name": "Ultimate approximations in nonmonotonic knowledge representation systems", "description": "  We study fixpoints of operators on lattices. To this end we introduce the\nnotion of an approximation of an operator. We order approximations by means of\na precision ordering. We show that each lattice operator O has a unique most\nprecise or ultimate approximation. We demonstrate that fixpoints of this\nultimate approximation provide useful insights into fixpoints of the operator\nO.\n  We apply our theory to logic programming and introduce the ultimate\nKripke-Kleene, well-founded and stable semantics. We show that the ultimate\nKripke-Kleene and well-founded semantics are more precise then their standard\ncounterparts We argue that ultimate semantics for logic programming have\nattractive epistemological properties and that, while in general they are\ncomputationally more complex than the standard semantics, for many classes of\ntheories, their complexity is no worse.\n", "weight": 0.45395705103874207}, {"link": "http://arxiv.org/abs/cs/0207060v1", "name": "Preferred well-founded semantics for logic programming by alternating\n  fixpoints: Preliminary report", "description": "  We analyze the problem of defining well-founded semantics for ordered logic\nprograms within a general framework based on alternating fixpoint theory. We\nstart by showing that generalizations of existing answer set approaches to\npreference are too weak in the setting of well-founded semantics. We then\nspecify some informal yet intuitive criteria and propose a semantical framework\nfor preference handling that is more suitable for defining well-founded\nsemantics for ordered logic programs. The suitability of the new approach is\nconvinced by the fact that many attractive properties are satisfied by our\nsemantics. In particular, our semantics is still correct with respect to\nvarious existing answer sets semantics while it successfully overcomes the\nweakness of their generalization to well-founded semantics. Finally, we\nindicate how an existing preferred well-founded semantics can be captured\nwithin our semantical framework.\n", "weight": 0.060405123978853226}, {"link": "http://arxiv.org/abs/cs/0208034v3", "name": "Causes and Explanations: A Structural-Model Approach. Part II:\n  Explanations", "description": "  We propose new definitions of (causal) explanation, using structural\nequations to model counterfactuals. The definition is based on the notion of\nactual cause, as defined and motivated in a companion paper. Essentially, an\nexplanation is a fact that is not known for certain but, if found to be true,\nwould constitute an actual cause of the fact to be explained, regardless of the\nagent's initial uncertainty. We show that the definition handles well a number\nof problematic examples from the literature.\n", "weight": 0.23981605470180511}, {"link": "http://arxiv.org/abs/cs/0212025v1", "name": "Searching for Plannable Domains can Speed up Reinforcement Learning", "description": "  Reinforcement learning (RL) involves sequential decision making in uncertain\nenvironments. The aim of the decision-making agent is to maximize the benefit\nof acting in its environment over an extended period of time. Finding an\noptimal policy in RL may be very slow. To speed up learning, one often used\nsolution is the integration of planning, for example, Sutton's Dyna algorithm,\nor various other methods using macro-actions.\n  Here we suggest to separate plannable, i.e., close to deterministic parts of\nthe world, and focus planning efforts in this domain. A novel reinforcement\nlearning method called plannable RL (pRL) is proposed here. pRL builds a simple\nmodel, which is used to search for macro actions. The simplicity of the model\nmakes planning computationally inexpensive. It is shown that pRL finds an\noptimal policy, and that plannable macro actions found by pRL are near-optimal.\nIn turn, it is unnecessary to try large numbers of macro actions, which enables\nfast learning. The utility of pRL is demonstrated by computer simulations.\n", "weight": 0.600111186504364}], "plan": [{"link": "http://arxiv.org/abs/cs/9311101v1", "name": "The Difficulties of Learning Logic Programs with Cut", "description": "  As real logic programmers normally use cut (!), an effective learning\nprocedure for logic programs should be able to deal with it. Because the cut\npredicate has only a procedural meaning, clauses containing cut cannot be\nlearned using an extensional evaluation method, as is done in most learning\nsystems. On the other hand, searching a space of possible programs (instead of\na space of independent clauses) is unfeasible. An alternative solution is to\ngenerate first a candidate base program which covers the positive examples, and\nthen make it consistent by inserting cut where appropriate. The problem of\nlearning programs with cut has not been investigated before and this seems to\nbe a natural and reasonable approach. We generalize this scheme and investigate\nthe difficulties that arise. Some of the major shortcomings are actually\ncaused, in general, by the need for intensional evaluation. As a conclusion,\nthe analysis of this paper suggests, on precise and technical grounds, that\nlearning cut is difficult, and current induction techniques should probably be\nrestricted to purely declarative logic languages.\n", "weight": 0.5616613030433655}, {"link": "http://arxiv.org/abs/cs/9409101v1", "name": "On Planning while Learning", "description": "  This paper introduces a framework for Planning while Learning where an agent\nis given a goal to achieve in an environment whose behavior is only partially\nknown to the agent. We discuss the tractability of various plan-design\nprocesses. We show that for a large natural class of Planning while Learning\nsystems, a plan can be presented and verified in a reasonable time. However,\ncoming up algorithmically with a plan, even for simple classes of systems is\napparently intractable. We emphasize the role of off-line plan-design\nprocesses, and show that, in most natural cases, the verification (projection)\npart can be carried out in an efficient algorithmic manner.\n", "weight": 0.27585363388061523}, {"link": "http://arxiv.org/abs/cs/9412103v1", "name": "Total-Order and Partial-Order Planning: A Comparative Analysis", "description": "  For many years, the intuitions underlying partial-order planning were largely\ntaken for granted. Only in the past few years has there been renewed interest\nin the fundamental principles underlying this paradigm. In this paper, we\npresent a rigorous comparative analysis of partial-order and total-order\nplanning by focusing on two specific planners that can be directly compared. We\nshow that there are some subtle assumptions that underly the wide-spread\nintuitions regarding the supposed efficiency of partial-order planning. For\ninstance, the superiority of partial-order planning can depend critically upon\nthe search strategy and the structure of the search space. Understanding the\nunderlying assumptions is crucial for constructing efficient planners.\n", "weight": 0.3767379820346832}, {"link": "http://arxiv.org/abs/cs/9501101v1", "name": "Solving Multiclass Learning Problems via Error-Correcting Output Codes", "description": "  Multiclass learning problems involve finding a definition for an unknown\nfunction f(x) whose range is a discrete set containing k &gt 2 values (i.e., k\n``classes''). The definition is acquired by studying collections of training\nexamples of the form [x_i, f (x_i)]. Existing approaches to multiclass learning\nproblems include direct application of multiclass algorithms such as the\ndecision-tree algorithms C4.5 and CART, application of binary concept learning\nalgorithms to learn individual binary functions for each of the k classes, and\napplication of binary concept learning algorithms with distributed output\nrepresentations. This paper compares these three approaches to a new technique\nin which error-correcting codes are employed as a distributed output\nrepresentation. We show that these output representations improve the\ngeneralization performance of both C4.5 and backpropagation on a wide range of\nmulticlass learning tasks. We also demonstrate that this approach is robust\nwith respect to changes in the size of the training sample, the assignment of\ndistributed representations to particular classes, and the application of\noverfitting avoidance techniques such as decision-tree pruning. Finally, we\nshow that---like the other methods---the error-correcting code technique can\nprovide reliable class probability estimates. Taken together, these results\ndemonstrate that error-correcting output codes provide a general-purpose method\nfor improving the performance of inductive learning programs on multiclass\nproblems.\n", "weight": 0.3712301254272461}, {"link": "http://arxiv.org/abs/cs/9501102v1", "name": "A Domain-Independent Algorithm for Plan Adaptation", "description": "  The paradigms of transformational planning, case-based planning, and plan\ndebugging all involve a process known as plan adaptation - modifying or\nrepairing an old plan so it solves a new problem. In this paper we provide a\ndomain-independent algorithm for plan adaptation, demonstrate that it is sound,\ncomplete, and systematic, and compare it to other adaptation algorithms in the\nliterature. Our approach is based on a view of planning as searching a graph of\npartial plans. Generative planning starts at the graph's root and moves from\nnode to node using plan-refinement operators. In planning by adaptation, a\nlibrary plan - an arbitrary node in the plan graph - is the starting point for\nthe search, and the plan-adaptation algorithm can apply both the same\nrefinement operators available to a generative planner and can also retract\nconstraints and steps from the plan. Our algorithm's completeness ensures that\nthe adaptation algorithm will eventually search the entire graph and its\nsystematicity ensures that it will do so without redundantly searching any\nparts of the graph.\n", "weight": 0.874815821647644}, {"link": "http://arxiv.org/abs/cs/9501103v1", "name": "Truncating Temporal Differences: On the Efficient Implementation of\n  TD(lambda) for Reinforcement Learning", "description": "  Temporal difference (TD) methods constitute a class of methods for learning\npredictions in multi-step prediction problems, parameterized by a recency\nfactor lambda. Currently the most important application of these methods is to\ntemporal credit assignment in reinforcement learning. Well known reinforcement\nlearning algorithms, such as AHC or Q-learning, may be viewed as instances of\nTD learning. This paper examines the issues of the efficient and general\nimplementation of TD(lambda) for arbitrary lambda, for use with reinforcement\nlearning algorithms optimizing the discounted sum of rewards. The traditional\napproach, based on eligibility traces, is argued to suffer from both\ninefficiency and lack of generality. The TTD (Truncated Temporal Differences)\nprocedure is proposed as an alternative, that indeed only approximates\nTD(lambda), but requires very little computation per action and can be used\nwith arbitrary function representation methods. The idea from which it is\nderived is fairly simple and not new, but probably unexplored so far.\nEncouraging experimental results are presented, suggesting that using lambda\n&gt 0 with the TTD procedure allows one to obtain a significant learning\nspeedup at essentially the same cost as usual TD(0) learning.\n", "weight": 0.9863595962524414}, {"link": "http://arxiv.org/abs/cs/9505104v1", "name": "Pac-Learning Recursive Logic Programs: Efficient Algorithms", "description": "  We present algorithms that learn certain classes of function-free recursive\nlogic programs in polynomial time from equivalence queries. In particular, we\nshow that a single k-ary recursive constant-depth determinate clause is\nlearnable. Two-clause programs consisting of one learnable recursive clause and\none constant-depth determinate non-recursive clause are also learnable, if an\nadditional ``basecase'' oracle is assumed. These results immediately imply the\npac-learnability of these classes. Although these classes of learnable\nrecursive programs are very constrained, it is shown in a companion paper that\nthey are maximally general, in that generalizing either class in any natural\nway leads to a computationally difficult learning problem. Thus, taken together\nwith its companion paper, this paper establishes a boundary of efficient\nlearnability for recursive logic programs.\n", "weight": 0.9808459281921387}, {"link": "http://arxiv.org/abs/cs/9505105v1", "name": "Pac-learning Recursive Logic Programs: Negative Results", "description": "  In a companion paper it was shown that the class of constant-depth\ndeterminate k-ary recursive clauses is efficiently learnable. In this paper we\npresent negative results showing that any natural generalization of this class\nis hard to learn in Valiant's model of pac-learnability. In particular, we show\nthat the following program classes are cryptographically hard to learn:\nprograms with an unbounded number of constant-depth linear recursive clauses;\nprograms with one constant-depth determinate clause containing an unbounded\nnumber of recursive calls; and programs with one linear recursive clause of\nconstant locality. These results immediately imply the non-learnability of any\nmore general class of programs. We also show that learning a constant-depth\ndeterminate program with either two linear recursive clauses or one linear\nrecursive clause and one non-recursive clause is as hard as learning boolean\nDNF. Together with positive results from the companion paper, these negative\nresults establish a boundary of efficient learnability for recursive\nfunction-free clauses.\n", "weight": 0.9849976897239685}, {"link": "http://arxiv.org/abs/cs/9506101v1", "name": "FLECS: Planning with a Flexible Commitment Strategy", "description": "  There has been evidence that least-commitment planners can efficiently handle\nplanning problems that involve difficult goal interactions. This evidence has\nled to the common belief that delayed-commitment is the \"best\" possible\nplanning strategy. However, we recently found evidence that eager-commitment\nplanners can handle a variety of planning problems more efficiently, in\nparticular those with difficult operator choices. Resigned to the futility of\ntrying to find a universally successful planning strategy, we devised a planner\nthat can be used to study which domains and problems are best for which\nplanning strategies. In this article we introduce this new planning algorithm,\nFLECS, which uses a FLExible Commitment Strategy with respect to plan-step\norderings. It is able to use any strategy from delayed-commitment to\neager-commitment. The combination of delayed and eager operator-ordering\ncommitments allows FLECS to take advantage of the benefits of explicitly using\na simulated execution state and reasoning about planning constraints. FLECS can\nvary its commitment strategy across different problems and domains, and also\nduring the course of a single planning problem. FLECS represents a novel\ncontribution to planning in that it explicitly provides the choice of which\ncommitment strategy to use while planning. FLECS provides a framework to\ninvestigate the mapping from planning domains and problems to efficient\nplanning strategies.\n", "weight": 0.6069568395614624}, {"link": "http://arxiv.org/abs/cs/9506102v1", "name": "Induction of First-Order Decision Lists: Results on Learning the Past\n  Tense of English Verbs", "description": "  This paper presents a method for inducing logic programs from examples that\nlearns a new class of concepts called first-order decision lists, defined as\nordered lists of clauses each ending in a cut. The method, called FOIDL, is\nbased on FOIL (Quinlan, 1990) but employs intensional background knowledge and\navoids the need for explicit negative examples. It is particularly useful for\nproblems that involve rules with specific exceptions, such as learning the\npast-tense of English verbs, a task widely studied in the context of the\nsymbolic/connectionist debate. FOIDL is able to learn concise, accurate\nprograms for this problem from significantly fewer examples than previous\nmethods (both connectionist and symbolic).\n", "weight": 0.31189292669296265}, {"link": "http://arxiv.org/abs/cs/9512103v1", "name": "Generalization of Clauses under Implication", "description": "  In the area of inductive learning, generalization is a main operation, and\nthe usual definition of induction is based on logical implication. Recently\nthere has been a rising interest in clausal representation of knowledge in\nmachine learning. Almost all inductive learning systems that perform\ngeneralization of clauses use the relation theta-subsumption instead of\nimplication. The main reason is that there is a well-known and simple technique\nto compute least general generalizations under theta-subsumption, but not under\nimplication. However generalization under theta-subsumption is inappropriate\nfor learning recursive clauses, which is a crucial problem since recursion is\nthe basic program structure of logic programs. We note that implication between\nclauses is undecidable, and we therefore introduce a stronger form of\nimplication, called T-implication, which is decidable between clauses. We show\nthat for every finite set of clauses there exists a least general\ngeneralization under T-implication. We describe a technique to reduce\ngeneralizations under implication of a clause to generalizations under\ntheta-subsumption of what we call an expansion of the original clause. Moreover\nwe show that for every non-tautological clause there exists a T-complete\nexpansion, which means that every generalization under T-implication of the\nclause is reduced to a generalization under theta-subsumption of the expansion.\n", "weight": 0.9871393442153931}, {"link": "http://arxiv.org/abs/cs/9512106v1", "name": "Statistical Feature Combination for the Evaluation of Game Positions", "description": "  This article describes an application of three well-known statistical methods\nin the field of game-tree search: using a large number of classified Othello\npositions, feature weights for evaluation functions with a\ngame-phase-independent meaning are estimated by means of logistic regression,\nFisher's linear discriminant, and the quadratic discriminant function for\nnormally distributed features. Thereafter, the playing strengths are compared\nby means of tournaments between the resulting versions of a world-class Othello\nprogram. In this application, logistic regression - which is used here for the\nfirst time in the context of game playing - leads to better results than the\nother approaches.\n", "weight": 0.6223520636558533}, {"link": "http://arxiv.org/abs/cs/9605106v1", "name": "2Planning for Contingencies: A Decision-based Approach", "description": "  A fundamental assumption made by classical AI planners is that there is no\nuncertainty in the world: the planner has full knowledge of the conditions\nunder which the plan will be executed and the outcome of every action is fully\npredictable. These planners cannot therefore construct contingency plans, i.e.,\nplans in which different actions are performed in different circumstances. In\nthis paper we discuss some issues that arise in the representation and\nconstruction of contingency plans and describe Cassandra, a partial-order\ncontingency planner. Cassandra uses explicit decision-steps that enable the\nagent executing the plan to decide which plan branch to follow. The\ndecision-steps in a plan result in subgoals to acquire knowledge, which are\nplanned for in the same way as any other subgoals. Cassandra thus distinguishes\nthe process of gathering information from the process of making decisions. The\nexplicit representation of decisions in Cassandra allows a coherent approach to\nthe problems of contingent planning, and provides a solid base for extensions\nsuch as the use of different decision-making procedures.\n", "weight": 0.5989047288894653}, {"link": "http://arxiv.org/abs/cs/9609101v1", "name": "Accelerating Partial-Order Planners: Some Techniques for Effective\n  Search Control and Pruning", "description": "  We propose some domain-independent techniques for bringing well-founded\npartial-order planners closer to practicality. The first two techniques are\naimed at improving search control while keeping overhead costs low. One is\nbased on a simple adjustment to the default A* heuristic used by UCPOP to\nselect plans for refinement. The other is based on preferring ``zero\ncommitment'' (forced) plan refinements whenever possible, and using LIFO\nprioritization otherwise. A more radical technique is the use of operator\nparameter domains to prune search. These domains are initially computed from\nthe definitions of the operators and the initial and goal conditions, using a\npolynomial-time algorithm that propagates sets of constants through the\noperator graph, starting in the initial conditions. During planning, parameter\ndomains can be used to prune nonviable operator instances and to remove\nspurious clobbering threats. In experiments based on modifications of UCPOP,\nour improved plan and goal selection strategies gave speedups by factors\nranging from 5 to more than 1000 for a variety of problems that are nontrivial\nfor the unmodified version. Crucially, the hardest problems gave the greatest\nimprovements. The pruning technique based on parameter domains often gave\nspeedups by an order of magnitude or more for difficult problems, both with the\ndefault UCPOP search strategy and with our improved strategy. The Lisp code for\nour techniques and for the test problems is provided in on-line appendices.\n", "weight": 0.07066521793603897}, {"link": "http://arxiv.org/abs/cs/9707103v1", "name": "Defining Relative Likelihood in Partially-Ordered Preferential\n  Structures", "description": "  Starting with a likelihood or preference order on worlds, we extend it to a\nlikelihood ordering on sets of worlds in a natural way, and examine the\nresulting logic. Lewis earlier considered such a notion of relative likelihood\nin the context of studying counterfactuals, but he assumed a total preference\norder on worlds. Complications arise when examining partial orders that are not\npresent for total orders. There are subtleties involving the exact approach to\nlifting the order on worlds to an order on sets of worlds. In addition, the\naxiomatization of the logic of relative likelihood in the case of partial\norders gives insight into the connection between relative likelihood and\ndefault reasoning.\n", "weight": 0.12051957100629807}, {"link": "http://arxiv.org/abs/cs/9803102v1", "name": "Cached Sufficient Statistics for Efficient Machine Learning with Large\n  Datasets", "description": "  This paper introduces new algorithms and data structures for quick counting\nfor machine learning datasets. We focus on the counting task of constructing\ncontingency tables, but our approach is also applicable to counting the number\nof records in a dataset that match conjunctive queries. Subject to certain\nassumptions, the costs of these operations can be shown to be independent of\nthe number of records in the dataset and loglinear in the number of non-zero\nentries in the contingency table. We provide a very sparse data structure, the\nADtree, to minimize memory use. We provide analytical worst-case bounds for\nthis structure for several models of data distribution. We empirically\ndemonstrate that tractably-sized data structures can be produced for large\nreal-world datasets by (a) using a sparse tree structure that never allocates\nmemory for counts of zero, (b) never allocating memory for counts that can be\ndeduced from other counts, and (c) not bothering to expand the tree fully near\nits leaves. We show how the ADtree can be used to accelerate Bayes net\nstructure finding algorithms, rule learning algorithms, and feature selection\nalgorithms, and we provide a number of empirical results comparing ADtree\nmethods against traditional direct counting approaches. We also discuss the\npossible uses of ADtrees in other machine learning methods, and discuss the\nmerits of ADtrees in comparison with alternative representations such as\nkd-trees, R-trees and Frequent Sets.\n", "weight": 0.6940153241157532}, {"link": "http://arxiv.org/abs/cs/9810016v1", "name": "SYNERGY: A Linear Planner Based on Genetic Programming", "description": "  In this paper we describe SYNERGY, which is a highly parallelizable, linear\nplanning system that is based on the genetic programming paradigm. Rather than\nreasoning about the world it is planning for, SYNERGY uses artificial\nselection, recombination and fitness measure to generate linear plans that\nsolve conjunctive goals. We ran SYNERGY on several domains (e.g., the briefcase\nproblem and a few variants of the robot navigation problem), and the\nexperimental results show that our planner is capable of handling problem\ninstances that are one to two orders of magnitude larger than the ones solved\nby UCPOP. In order to facilitate the search reduction and to enhance the\nexpressive power of SYNERGY, we also propose two major extensions to our\nplanning system: a formalism for using hierarchical planning operators, and a\nframework for planning in dynamic environments.\n", "weight": 0.14365677535533905}, {"link": "http://arxiv.org/abs/cs/0003049v1", "name": "Planning with Incomplete Information", "description": "  Planning is a natural domain of application for frameworks of reasoning about\nactions and change. In this paper we study how one such framework, the Language\nE, can form the basis for planning under (possibly) incomplete information. We\ndefine two types of plans: weak and safe plans, and propose a planner, called\nthe E-Planner, which is often able to extend an initial weak plan into a safe\nplan even though the (explicit) information available is incomplete, e.g. for\ncases where the initial state is not completely known. The E-Planner is based\nupon a reformulation of the Language E in argumentation terms and a natural\nproof theory resulting from the reformulation. It uses an extension of this\nproof theory by means of abduction for the generation of plans and adopts\nargumentation-based techniques for extending weak plans into safe plans. We\nprovide representative examples illustrating the behaviour of the E-Planner, in\nparticular for cases where the status of fluents is incompletely known.\n", "weight": 0.9873196482658386}, {"link": "http://arxiv.org/abs/cs/0207023v2", "name": "Domain-Dependent Knowledge in Answer Set Planning", "description": "  In this paper we consider three different kinds of domain-dependent control\nknowledge (temporal, procedural and HTN-based) that are useful in planning. Our\napproach is declarative and relies on the language of logic programming with\nanswer set semantics (AnsProlog*). AnsProlog* is designed to plan without\ncontrol knowledge. We show how temporal, procedural and HTN-based control\nknowledge can be incorporated into AnsProlog* by the modular addition of a\nsmall number of domain-dependent rules, without the need to modify the planner.\nWe formally prove the correctness of our planner, both in the absence and\npresence of the control knowledge. Finally, we perform some initial\nexperimentation that demonstrates the potential reduction in planning time that\ncan be achieved when procedural domain knowledge is used to solve planning\nproblems with large plan length.\n", "weight": 0.12954823672771454}, {"link": "http://arxiv.org/abs/cs/0207025v1", "name": "\"Minimal defence\": a refinement of the preferred semantics for\n  argumentation frameworks", "description": "  Dung's abstract framework for argumentation enables a study of the\ninteractions between arguments based solely on an ``attack'' binary relation on\nthe set of arguments. Various ways to solve conflicts between contradictory\npieces of information have been proposed in the context of argumentation,\nnonmonotonic reasoning or logic programming, and can be captured by appropriate\nsemantics within Dung's framework. A common feature of these semantics is that\none can always maximize in some sense the set of acceptable arguments. We\npropose in this paper to extend Dung's framework in order to allow for the\nrepresentation of what we call ``restricted'' arguments: these arguments should\nonly be used if absolutely necessary, that is, in order to support other\narguments that would otherwise be defeated. We modify Dung's preferred\nsemantics accordingly: a set of arguments becomes acceptable only if it\ncontains a minimum of restricted arguments, for a maximum of unrestricted\narguments.\n", "weight": 0.7100570201873779}], "problem": [{"link": "http://arxiv.org/abs/cs/9312101v1", "name": "Decidable Reasoning in Terminological Knowledge Representation Systems", "description": "  Terminological knowledge representation systems (TKRSs) are tools for\ndesigning and using knowledge bases that make use of terminological languages\n(or concept languages). We analyze from a theoretical point of view a TKRS\nwhose capabilities go beyond the ones of presently available TKRSs. The new\nfeatures studied, often required in practical applications, can be summarized\nin three main points. First, we consider a highly expressive terminological\nlanguage, called ALCNR, including general complements of concepts, number\nrestrictions and role conjunction. Second, we allow to express inclusion\nstatements between general concepts, and terminological cycles as a particular\ncase. Third, we prove the decidability of a number of desirable TKRS-deduction\nservices (like satisfiability, subsumption and instance checking) through a\nsound, complete and terminating calculus for reasoning in ALCNR-knowledge\nbases. Our calculus extends the general technique of constraint systems. As a\nbyproduct of the proof, we get also the result that inclusion statements in\nALCNR can be simulated by terminological cycles, if descriptive semantics is\nadopted.\n", "weight": 0.40894815325737}, {"link": "http://arxiv.org/abs/cs/9402101v1", "name": "Learning the Past Tense of English Verbs: The Symbolic Pattern\n  Associator vs. Connectionist Models", "description": "  Learning the past tense of English verbs - a seemingly minor aspect of\nlanguage acquisition - has generated heated debates since 1986, and has become\na landmark task for testing the adequacy of cognitive modeling. Several\nartificial neural networks (ANNs) have been implemented, and a challenge for\nbetter symbolic models has been posed. In this paper, we present a\ngeneral-purpose Symbolic Pattern Associator (SPA) based upon the decision-tree\nlearning algorithm ID3. We conduct extensive head-to-head comparisons on the\ngeneralization ability between ANN models and the SPA under different\nrepresentations. We conclude that the SPA generalizes the past tense of unseen\nverbs better than ANN models by a wide margin, and we offer insights as to why\nthis should be the case. We also discuss a new default strategy for\ndecision-tree learning algorithms.\n", "weight": 0.22269247472286224}, {"link": "http://arxiv.org/abs/cs/9408101v1", "name": "Random Worlds and Maximum Entropy", "description": "  Given a knowledge base KB containing first-order and statistical facts, we\nconsider a principled method, called the random-worlds method, for computing a\ndegree of belief that some formula Phi holds given KB. If we are reasoning\nabout a world or system consisting of N individuals, then we can consider all\npossible worlds, or first-order models, with domain {1,...,N} that satisfy KB,\nand compute the fraction of them in which Phi is true. We define the degree of\nbelief to be the asymptotic value of this fraction as N grows large. We show\nthat when the vocabulary underlying Phi and KB uses constants and unary\npredicates only, we can naturally associate an entropy with each world. As N\ngrows larger, there are many more worlds with higher entropy. Therefore, we can\nuse a maximum-entropy computation to compute the degree of belief. This result\nis in a similar spirit to previous work in physics and artificial intelligence,\nbut is far more general. Of equal interest to the result itself are the\nlimitations on its scope. Most importantly, the restriction to unary predicates\nseems necessary. Although the random-worlds method makes sense in general, the\nconnection to maximum entropy seems to disappear in the non-unary case. These\nobservations suggest unexpected limitations to the applicability of\nmaximum-entropy methods.\n", "weight": 0.9881540536880493}, {"link": "http://arxiv.org/abs/cs/9507101v1", "name": "Building and Refining Abstract Planning Cases by Change of\n  Representation Language", "description": "  ion is one of the most promising approaches to improve the performance of\nproblem solvers. In several domains abstraction by dropping sentences of a\ndomain description -- as used in most hierarchical planners -- has proven\nuseful. In this paper we present examples which illustrate significant\ndrawbacks of abstraction by dropping sentences. To overcome these drawbacks, we\npropose a more general view of abstraction involving the change of\nrepresentation language. We have developed a new abstraction methodology and a\nrelated sound and complete learning algorithm that allows the complete change\nof representation language of planning cases from concrete to abstract.\nHowever, to achieve a powerful change of the representation language, the\nabstract language itself as well as rules which describe admissible ways of\nabstracting states must be provided in the domain model. This new abstraction\napproach is the core of Paris (Plan Abstraction and Refinement in an Integrated\nSystem), a system in which abstract planning cases are automatically learned\nfrom given concrete cases. An empirical study in the domain of process planning\nin mechanical engineering shows significant advantages of the proposed\nreasoning from abstract cases over classical hierarchical planning.\n", "weight": 0.5730153918266296}, {"link": "http://arxiv.org/abs/cs/9512105v1", "name": "Translating between Horn Representations and their Characteristic Models", "description": "  Characteristic models are an alternative, model based, representation for\nHorn expressions. It has been shown that these two representations are\nincomparable and each has its advantages over the other. It is therefore\nnatural to ask what is the cost of translating, back and forth, between these\nrepresentations. Interestingly, the same translation questions arise in\ndatabase theory, where it has applications to the design of relational\ndatabases. This paper studies the computational complexity of these problems.\nOur main result is that the two translation problems are equivalent under\npolynomial reductions, and that they are equivalent to the corresponding\ndecision problem. Namely, translating is equivalent to deciding whether a given\nset of models is the set of characteristic models for a given Horn expression.\nWe also relate these problems to the hypergraph transversal problem, a well\nknown problem which is related to other applications in AI and for which no\npolynomial time algorithm is known. It is shown that in general our translation\nproblems are at least as hard as the hypergraph transversal problem, and in a\nspecial case they are equivalent to it.\n", "weight": 0.9847409129142761}, {"link": "http://arxiv.org/abs/cs/9602101v1", "name": "Well-Founded Semantics for Extended Logic Programs with Dynamic\n  Preferences", "description": "  The paper describes an extension of well-founded semantics for logic programs\nwith two types of negation. In this extension information about preferences\nbetween rules can be expressed in the logical language and derived dynamically.\nThis is achieved by using a reserved predicate symbol and a naming technique.\nConflicts among rules are resolved whenever possible on the basis of derived\npreference information. The well-founded conclusions of prioritized logic\nprograms can be computed in polynomial time. A legal reasoning example\nillustrates the usefulness of the approach.\n", "weight": 0.31106892228126526}, {"link": "http://arxiv.org/abs/cs/9603101v1", "name": "Quantum Computing and Phase Transitions in Combinatorial Search", "description": "  We introduce an algorithm for combinatorial search on quantum computers that\nis capable of significantly concentrating amplitude into solutions for some NP\nsearch problems, on average. This is done by exploiting the same aspects of\nproblem structure as used by classical backtrack methods to avoid unproductive\nsearch choices. This quantum algorithm is much more likely to find solutions\nthan the simple direct use of quantum parallelism. Furthermore, empirical\nevaluation on small problems shows this quantum algorithm displays the same\nphase transition behavior, and at the same location, as seen in many previously\nstudied classical search methods. Specifically, difficult problem instances are\nconcentrated near the abrupt change from underconstrained to overconstrained\nproblems.\n", "weight": 0.2030094414949417}, {"link": "http://arxiv.org/abs/cs/9605102v1", "name": "Least Generalizations and Greatest Specializations of Sets of Clauses", "description": "  The main operations in Inductive Logic Programming (ILP) are generalization\nand specialization, which only make sense in a generality order. In ILP, the\nthree most important generality orders are subsumption, implication and\nimplication relative to background knowledge. The two languages used most often\nare languages of clauses and languages of only Horn clauses. This gives a total\nof six different ordered languages. In this paper, we give a systematic\ntreatment of the existence or non-existence of least generalizations and\ngreatest specializations of finite sets of clauses in each of these six ordered\nsets. We survey results already obtained by others and also contribute some\nanswers of our own. Our main new results are, firstly, the existence of a\ncomputable least generalization under implication of every finite set of\nclauses containing at least one non-tautologous function-free clause (among\nother, not necessarily function-free clauses). Secondly, we show that such a\nleast generalization need not exist under relative implication, not even if\nboth the set that is to be generalized and the background knowledge are\nfunction-free. Thirdly, we give a complete discussion of existence and\nnon-existence of greatest specializations in each of the six ordered languages.\n", "weight": 0.025896985083818436}, {"link": "http://arxiv.org/abs/cs/9606101v1", "name": "A Principled Approach Towards Symbolic Geometric Constraint Satisfaction", "description": "  An important problem in geometric reasoning is to find the configuration of a\ncollection of geometric bodies so as to satisfy a set of given constraints.\nRecently, it has been suggested that this problem can be solved efficiently by\nsymbolically reasoning about geometry. This approach, called degrees of freedom\nanalysis, employs a set of specialized routines called plan fragments that\nspecify how to change the configuration of a set of bodies to satisfy a new\nconstraint while preserving existing constraints. A potential drawback, which\nlimits the scalability of this approach, is concerned with the difficulty of\nwriting plan fragments. In this paper we address this limitation by showing how\nthese plan fragments can be automatically synthesized using first principles\nabout geometric bodies, actions, and topology.\n", "weight": 0.4364757835865021}, {"link": "http://arxiv.org/abs/cs/9608103v1", "name": "Spatial Aggregation: Theory and Applications", "description": "  Visual thinking plays an important role in scientific reasoning. Based on the\nresearch in automating diverse reasoning tasks about dynamical systems,\nnonlinear controllers, kinematic mechanisms, and fluid motion, we have\nidentified a style of visual thinking, imagistic reasoning. Imagistic reasoning\norganizes computations around image-like, analogue representations so that\nperceptual and symbolic operations can be brought to bear to infer structure\nand behavior. Programs incorporating imagistic reasoning have been shown to\nperform at an expert level in domains that defy current analytic or numerical\nmethods. We have developed a computational paradigm, spatial aggregation, to\nunify the description of a class of imagistic problem solvers. A program\nwritten in this paradigm has the following properties. It takes a continuous\nfield and optional objective functions as input, and produces high-level\ndescriptions of structure, behavior, or control actions. It computes a\nmulti-layer of intermediate representations, called spatial aggregates, by\nforming equivalence classes and adjacency relations. It employs a small set of\ngeneric operators such as aggregation, classification, and localization to\nperform bidirectional mapping between the information-rich field and\nsuccessively more abstract spatial aggregates. It uses a data structure, the\nneighborhood graph, as a common interface to modularize computations. To\nillustrate our theory, we describe the computational structure of three\nimplemented problem solvers -- KAM, MAPS, and HIPAIR --- in terms of the\nspatial aggregation generic operators by mixing and matching a library of\ncommonly used routines.\n", "weight": 0.33476686477661133}, {"link": "http://arxiv.org/abs/cs/9608104v1", "name": "A Hierarchy of Tractable Subsets for Computing Stable Models", "description": "  Finding the stable models of a knowledge base is a significant computational\nproblem in artificial intelligence. This task is at the computational heart of\ntruth maintenance systems, autoepistemic logic, and default logic.\nUnfortunately, it is NP-hard. In this paper we present a hierarchy of classes\nof knowledge bases, Omega_1,Omega_2,..., with the following properties: first,\nOmega_1 is the class of all stratified knowledge bases; second, if a knowledge\nbase Pi is in Omega_k, then Pi has at most k stable models, and all of them may\nbe found in time O(lnk), where l is the length of the knowledge base and n the\nnumber of atoms in Pi; third, for an arbitrary knowledge base Pi, we can find\nthe minimum k such that Pi belongs to Omega_k in time polynomial in the size of\nPi; and, last, where K is the class of all knowledge bases, it is the case that\nunion{i=1 to infty} Omega_i = K, that is, every knowledge base belongs to some\nclass in the hierarchy.\n", "weight": 0.9847415685653687}, {"link": "http://arxiv.org/abs/cs/9707102v1", "name": "Eight Maximal Tractable Subclasses of Allen's Algebra with Metric Time", "description": "  This paper combines two important directions of research in temporal\nresoning: that of finding maximal tractable subclasses of Allen's interval\nalgebra, and that of reasoning with metric temporal information. Eight new\nmaximal tractable subclasses of Allen's interval algebra are presented, some of\nthem subsuming previously reported tractable algebras. The algebras allow for\nmetric temporal constraints on interval starting or ending points, using the\nrecent framework of Horn DLRs. Two of the algebras can express the notion of\nsequentiality between intervals, being the first such algebras admitting both\nqualitative and metric time.\n", "weight": 0.968955934047699}, {"link": "http://arxiv.org/abs/cs/9801101v1", "name": "Incremental Recompilation of Knowledge", "description": "  Approximating a general formula from above and below by Horn formulas (its\nHorn envelope and Horn core, respectively) was proposed by Selman and Kautz\n(1991, 1996) as a form of ``knowledge compilation,'' supporting rapid\napproximate reasoning; on the negative side, this scheme is static in that it\nsupports no updates, and has certain complexity drawbacks pointed out by\nKavvadias, Papadimitriou and Sideri (1993). On the other hand, the many\nframeworks and schemes proposed in the literature for theory update and\nrevision are plagued by serious complexity-theoretic impediments, even in the\nHorn case, as was pointed out by Eiter and Gottlob (1992), and is further\ndemonstrated in the present paper. More fundamentally, these schemes are not\ninductive, in that they may lose in a single update any positive properties of\nthe represented sets of formulas (small size, Horn structure, etc.). In this\npaper we propose a new scheme, incremental recompilation, which combines Horn\napproximation and model-based updates; this scheme is inductive and very\nefficient, free of the problems facing its constituents. A set of formulas is\nrepresented by an upper and lower Horn approximation. To update, we replace the\nupper Horn formula by the Horn envelope of its minimum-change update, and\nsimilarly the lower one by the Horn core of its update; the key fact which\nenables this scheme is that Horn envelopes and cores are easy to compute when\nthe underlying formula is the result of a minimum-change update of a Horn\nformula by a clause. We conjecture that efficient algorithms are possible for\nmore complex updates.\n", "weight": 0.7421621680259705}, {"link": "http://arxiv.org/abs/cs/9808101v1", "name": "The Computational Complexity of Probabilistic Planning", "description": "  We examine the computational complexity of testing and finding small plans in\nprobabilistic planning domains with both flat and propositional\nrepresentations. The complexity of plan evaluation and existence varies with\nthe plan type sought; we examine totally ordered plans, acyclic plans, and\nlooping plans, and partially ordered plans under three natural definitions of\nplan value. We show that problems of interest are complete for a variety of\ncomplexity classes: PL, P, NP, co-NP, PP, NP^PP, co-NP^PP, and PSPACE. In the\nprocess of proving that certain planning problems are complete for NP^PP, we\nintroduce a new basic NP^PP-complete problem, E-MAJSAT, which generalizes the\nstandard Boolean satisfiability problem to computations involving probabilistic\nquantities; our results suggest that the development of good heuristics for\nE-MAJSAT could be important for the creation of efficient algorithms for a wide\nvariety of problems.\n", "weight": 0.07668077200651169}, {"link": "http://arxiv.org/abs/cs/9906002v1", "name": "The Symbol Grounding Problem", "description": "  How can the semantic interpretation of a formal symbol system be made\nintrinsic to the system, rather than just parasitic on the meanings in our\nheads? How can the meanings of the meaningless symbol tokens, manipulated\nsolely on the basis of their (arbitrary) shapes, be grounded in anything but\nother meaningless symbols? The problem is analogous to trying to learn Chinese\nfrom a Chinese/Chinese dictionary alone. A candidate solution is sketched:\nSymbolic representations must be grounded bottom-up in nonsymbolic\nrepresentations of two kinds: (1) \"iconic representations,\" which are analogs\nof the proximal sensory projections of distal objects and events, and (2)\n\"categorical representations,\" which are learned and innate feature-detectors\nthat pick out the invariant features of object and event categories from their\nsensory projections. Elementary symbols are the names of these object and event\ncategories, assigned on the basis of their (nonsymbolic) categorical\nrepresentations. Higher-order (3) \"symbolic representations,\" grounded in these\nelementary symbols, consist of symbol strings describing category membership\nrelations (e.g., \"An X is a Y that is Z\").\n", "weight": 0.6871481537818909}, {"link": "http://arxiv.org/abs/cs/0003012v1", "name": "Defeasible Reasoning in OSCAR", "description": "  This is a system description for the OSCAR defeasible reasoner.\n", "weight": 0.025004606693983078}, {"link": "http://arxiv.org/abs/cs/0003016v1", "name": "Abductive and Consistency-Based Diagnosis Revisited: a Modeling\n  Perspective", "description": "  Diagnostic reasoning has been characterized logically as consistency-based\nreasoning or abductive reasoning. Previous analyses in the literature have\nshown, on the one hand, that choosing the (in general more restrictive)\nabductive definition may be appropriate or not, depending on the content of the\nknowledge base [Console&Torasso91], and, on the other hand, that, depending on\nthe choice of the definition the same knowledge should be expressed in\ndifferent form [Poole94].\n  Since in Model-Based Diagnosis a major problem is finding the right way of\nabstracting the behavior of the system to be modeled, this paper discusses the\nrelation between modeling, and in particular abstraction in the model, and the\nnotion of diagnosis.\n", "weight": 0.9808452725410461}, {"link": "http://arxiv.org/abs/cs/0003020v2", "name": "ACLP: Integrating Abduction and Constraint Solving", "description": "  ACLP is a system which combines abductive reasoning and constraint solving by\nintegrating the frameworks of Abductive Logic Programming (ALP) and Constraint\nLogic Programming (CLP). It forms a general high-level knowledge representation\nenvironment for abductive problems in Artificial Intelligence and other areas.\nIn ACLP, the task of abduction is supported and enhanced by its non-trivial\nintegration with constraint solving facilitating its application to complex\nproblems. The ACLP system is currently implemented on top of the CLP language\nof ECLiPSe as a meta-interpreter exploiting its underlying constraint solver\nfor finite domains. It has been applied to the problems of planning and\nscheduling in order to test its computational effectiveness compared with the\ndirect use of the (lower level) constraint solving framework of CLP on which it\nis built. These experiments provide evidence that the abductive framework of\nACLP does not compromise significantly the computational efficiency of the\nsolutions. Other experiments show the natural ability of ACLP to accommodate\neasily and in a robust way new or changing requirements of the original\nproblem.\n", "weight": 0.9884583950042725}, {"link": "http://arxiv.org/abs/cs/0003027v1", "name": "SLDNFA-system", "description": "  The SLDNFA-system results from the LP+ project at the K.U.Leuven, which\ninvestigates logics and proof procedures for these logics for declarative\nknowledge representation. Within this project inductive definition logic\n(ID-logic) is used as representation logic. Different solvers are being\ndeveloped for this logic and one of these is SLDNFA. A prototype of the system\nis available and used for investigating how to solve efficiently problems\nrepresented in ID-logic.\n", "weight": 0.46997180581092834}, {"link": "http://arxiv.org/abs/cs/0003029v1", "name": "Fuzzy Approaches to Abductive Inference", "description": "  This paper proposes two kinds of fuzzy abductive inference in the framework\nof fuzzy rule base. The abductive inference processes described here depend on\nthe semantic of the rule. We distinguish two classes of interpretation of a\nfuzzy rule, certainty generation rules and possible generation rules. In this\npaper we present the architecture of abductive inference in the first class of\ninterpretation. We give two kinds of problem that we can resolve by using the\nproposed models of inference.\n", "weight": 0.3875804841518402}, {"link": "http://arxiv.org/abs/cs/0003030v1", "name": "Problem solving in ID-logic with aggregates: some experiments", "description": "  The goal of the LP+ project at the K.U.Leuven is to design an expressive\nlogic, suitable for declarative knowledge representation, and to develop\nintelligent systems based on Logic Programming technology for solving\ncomputational problems using the declarative specifications. The ID-logic is an\nintegration of typed classical logic and a definition logic. Different\nabductive solvers for this language are being developed. This paper is a report\nof the integration of high order aggregates into ID-logic and the consequences\non the solver SLDNFA.\n", "weight": 0.5650973320007324}, {"link": "http://arxiv.org/abs/cs/0003032v1", "name": "cc-Golog: Towards More Realistic Logic-Based Robot Controllers", "description": "  High-level robot controllers in realistic domains typically deal with\nprocesses which operate concurrently, change the world continuously, and where\nthe execution of actions is event-driven as in ``charge the batteries as soon\nas the voltage level is low''. While non-logic-based robot control languages\nare well suited to express such scenarios, they fare poorly when it comes to\nprojecting, in a conspicuous way, how the world evolves when actions are\nexecuted. On the other hand, a logic-based control language like \\congolog,\nbased on the situation calculus, is well-suited for the latter. However, it has\nproblems expressing event-driven behavior. In this paper, we show how these\nproblems can be overcome by first extending the situation calculus to support\ncontinuous change and event-driven behavior and then presenting \\ccgolog, a\nvariant of \\congolog which is based on the extended situation calculus. One\nbenefit of \\ccgolog is that it narrows the gap in expressiveness compared to\nnon-logic-based control languages while preserving a semantically well-founded\nprojection mechanism.\n", "weight": 0.9847426414489746}, {"link": "http://arxiv.org/abs/cs/0003033v1", "name": "Smodels: A System for Answer Set Programming", "description": "  The Smodels system implements the stable model semantics for normal logic\nprograms. It handles a subclass of programs which contain no function symbols\nand are domain-restricted but supports extensions including built-in functions\nas well as cardinality and weight constraints. On top of this core engine more\ninvolved systems can be built. As an example, we have implemented total and\npartial stable model computation for disjunctive logic programs. An interesting\napplication method is based on answer set programming, i.e., encoding an\napplication problem as a set of rules so that its solutions are captured by the\nstable models of the rules. Smodels has been applied to a number of areas\nincluding planning, model checking, reachability analysis, product\nconfiguration, dynamic constraint satisfaction, and feature interaction.\n", "weight": 0.02834993414580822}, {"link": "http://arxiv.org/abs/cs/0003034v2", "name": "E-RES: A System for Reasoning about Actions, Events and Observations", "description": "  E-RES is a system that implements the Language E, a logic for reasoning about\nnarratives of action occurrences and observations. E's semantics is\nmodel-theoretic, but this implementation is based on a sound and complete\nreformulation of E in terms of argumentation, and uses general computational\ntechniques of argumentation frameworks. The system derives sceptical\nnon-monotonic consequences of a given reformulated theory which exactly\ncorrespond to consequences entailed by E's model-theory. The computation relies\non a complimentary ability of the system to derive credulous non-monotonic\nconsequences together with a set of supporting assumptions which is sufficient\nfor the (credulous) conclusion to hold. E-RES allows theories to contain\ngeneral action laws, statements about action occurrences, observations and\nstatements of ramifications (or universal laws). It is able to derive\nconsequences both forward and backward in time. This paper gives a short\noverview of the theoretical basis of E-RES and illustrates its use on a variety\nof examples. Currently, E-RES is being extended so that the system can be used\nfor planning.\n", "weight": 0.3083282709121704}, {"link": "http://arxiv.org/abs/cs/0003037v1", "name": "QUIP - A Tool for Computing Nonmonotonic Reasoning Tasks", "description": "  In this paper, we outline the prototype of an automated inference tool,\ncalled QUIP, which provides a uniform implementation for several nonmonotonic\nreasoning formalisms. The theoretical basis of QUIP is derived from well-known\nresults about the computational complexity of nonmonotonic logics and exploits\na representation of the different reasoning tasks in terms of quantified\nboolean formulae.\n", "weight": 0.7037949562072754}, {"link": "http://arxiv.org/abs/cs/0003039v1", "name": "DES: a Challenge Problem for Nonmonotonic Reasoning Systems", "description": "  The US Data Encryption Standard, DES for short, is put forward as an\ninteresting benchmark problem for nonmonotonic reasoning systems because (i) it\nprovides a set of test cases of industrial relevance which shares features of\nrandomly generated problems and real-world problems, (ii) the representation of\nDES using normal logic programs with the stable model semantics is simple and\neasy to understand, and (iii) this subclass of logic programs can be seen as an\ninteresting special case for many other formalizations of nonmonotonic\nreasoning. In this paper we present two encodings of DES as logic programs: a\ndirect one out of the standard specifications and an optimized one extending\nthe work of Massacci and Marraro. The computational properties of the encodings\nare studied by using them for DES key search with the Smodels system as the\nimplementation of the stable model semantics. Results indicate that the\nencodings and Smodels are quite competitive: they outperform state-of-the-art\nSAT-checkers working with an optimized encoding of DES into SAT and are\ncomparable with a SAT-checker that is customized and tuned for the optimized\nSAT encoding.\n", "weight": 0.50943922996521}, {"link": "http://arxiv.org/abs/cs/0003047v1", "name": "BDD-based reasoning in the fluent calculus - first results", "description": "  The paper reports on first preliminary results and insights gained in a\nproject aiming at implementing the fluent calculus using methods and techniques\nbased on binary decision diagrams. After reporting on an initial experiment\nshowing promising results we discuss our findings concerning various techniques\nand heuristics used to speed up the reasoning process.\n", "weight": 0.3111809492111206}, {"link": "http://arxiv.org/abs/cs/0003051v1", "name": "Local Diagnosis", "description": "  In an earlier work, we have presented operations of belief change which only\naffect the relevant part of a belief base. In this paper, we propose the\napplication of the same strategy to the problem of model-based diangosis. We\nfirst isolate the subset of the system description which is relevant for a\ngiven observation and then solve the diagnosis problem for this subset.\n", "weight": 0.24331434071063995}, {"link": "http://arxiv.org/abs/cs/0003061v1", "name": "dcs: An Implementation of DATALOG with Constraints", "description": "  Answer-set programming (ASP) has emerged recently as a viable programming\nparadigm. We describe here an ASP system, DATALOG with constraints or DC, based\non non-monotonic logic. Informally, DC theories consist of propositional\nclauses (constraints) and of Horn rules. The semantics is a simple and natural\nextension of the semantics of the propositional logic. However, thanks to the\npresence of Horn rules in the system, modeling of transitive closure becomes\nstraightforward. We describe the syntax, use and implementation of DC and\nprovide experimental results.\n", "weight": 0.34697115421295166}, {"link": "http://arxiv.org/abs/cs/0003077v1", "name": "DATALOG with constraints - an answer-set programming system", "description": "  Answer-set programming (ASP) has emerged recently as a viable programming\nparadigm well attuned to search problems in AI, constraint satisfaction and\ncombinatorics. Propositional logic is, arguably, the simplest ASP system with\nan intuitive semantics supporting direct modeling of problem constraints.\nHowever, for some applications, especially those requiring that transitive\nclosure be computed, it requires additional variables and results in large\ntheories. Consequently, it may not be a practical computational tool for such\nproblems. On the other hand, ASP systems based on nonmonotonic logics, such as\nstable logic programming, can handle transitive closure computation efficiently\nand, in general, yield very concise theories as problem representations. Their\nsemantics is, however, more complex. Searching for the middle ground, in this\npaper we introduce a new nonmonotonic logic, DATALOG with constraints or DC.\nInformally, DC theories consist of propositional clauses (constraints) and of\nHorn rules. The semantics is a simple and natural extension of the semantics of\nthe propositional logic. However, thanks to the presence of Horn rules in the\nsystem, modeling of transitive closure becomes straightforward. We describe the\nsyntax and semantics of DC, and study its properties. We discuss an\nimplementation of DC and present results of experimental study of the\neffectiveness of DC, comparing it with CSAT, a satisfiability checker and\nSMODELS implementation of stable logic programming. Our results show that DC is\ncompetitive with the other two approaches, in case of many search problems,\noften yielding much more efficient solutions.\n", "weight": 0.44799166917800903}, {"link": "http://arxiv.org/abs/cs/0006043v1", "name": "Constraint compiling into rules formalism constraint compiling into\n  rules formalism for dynamic CSPs computing", "description": "  In this paper we present a rule based formalism for filtering variables\ndomains of constraints. This formalism is well adapted for solving dynamic CSP.\nWe take diagnosis as an instance problem to illustrate the use of these rules.\nA diagnosis problem is seen like finding all the minimal sets of constraints to\nbe relaxed in the constraint network that models the device to be diagnosed\n", "weight": 0.8256372213363647}, {"link": "http://arxiv.org/abs/cs/0011030v1", "name": "Logic Programming Approaches for Representing and Solving Constraint\n  Satisfaction Problems: A Comparison", "description": "  Many logic programming based approaches can be used to describe and solve\ncombinatorial search problems. On the one hand there is constraint logic\nprogramming which computes a solution as an answer substitution to a query\ncontaining the variables of the constraint satisfaction problem. On the other\nhand there are systems based on stable model semantics, abductive systems, and\nfirst order logic model generators which compute solutions as models of some\ntheory. This paper compares these different approaches from the point of view\nof knowledge representation (how declarative are the programs) and from the\npoint of view of performance (how good are they at solving typical problems).\n", "weight": 0.4630577266216278}, {"link": "http://arxiv.org/abs/cs/0106025v1", "name": "Information Integration and Computational Logic", "description": "  Information Integration is a young and exciting field with enormous research\nand commercial significance in the new world of the Information Society. It\nstands at the crossroad of Databases and Artificial Intelligence requiring\nnovel techniques that bring together different methods from these fields.\nInformation from disparate heterogeneous sources often with no a-priori common\nschema needs to be synthesized in a flexible, transparent and intelligent way\nin order to respond to the demands of a query thus enabling a more informed\ndecision by the user or application program. The field although relatively\nyoung has already found many practical applications particularly for\nintegrating information over the World Wide Web. This paper gives a brief\nintroduction of the field highlighting some of the main current and future\nresearch issues and application areas. It attempts to evaluate the current and\npotential role of Computational Logic in this and suggests some of the problems\nwhere logic-based techniques could be used.\n", "weight": 0.9833273887634277}, {"link": "http://arxiv.org/abs/cs/0201022v2", "name": "A theory of experiment", "description": "  This article aims at clarifying the language and practice of scientific\nexperiment, mainly by hooking observability on calculability.\n", "weight": 0.020010128617286682}, {"link": "http://arxiv.org/abs/cs/0202021v1", "name": "Nonmonotonic Reasoning, Preferential Models and Cumulative Logics", "description": "  Many systems that exhibit nonmonotonic behavior have been described and\nstudied already in the literature. The general notion of nonmonotonic\nreasoning, though, has almost always been described only negatively, by the\nproperty it does not enjoy, i.e. monotonicity. We study here general patterns\nof nonmonotonic reasoning and try to isolate properties that could help us map\nthe field of nonmonotonic reasoning by reference to positive properties. We\nconcentrate on a number of families of nonmonotonic consequence relations,\ndefined in the style of Gentzen. Both proof-theoretic and semantic points of\nview are developed in parallel. The former point of view was pioneered by D.\nGabbay, while the latter has been advocated by Y. Shoham in. Five such families\nare defined and characterized by representation theorems, relating the two\npoints of view. One of the families of interest, that of preferential\nrelations, turns out to have been studied by E. Adams. The \"preferential\"\nmodels proposed here are a much stronger tool than Adams' probabilistic\nsemantics. The basic language used in this paper is that of propositional\nlogic. The extension of our results to first order predicate calculi and the\nstudy of the computational complexity of the decision problems described in\nthis paper will be treated in another paper.\n", "weight": 0.2506469190120697}, {"link": "http://arxiv.org/abs/cs/0202024v1", "name": "A note on Darwiche and Pearl", "description": "  It is shown that Darwiche and Pearl's postulates imply an interesting\nproperty, not noticed by the authors.\n", "weight": 0.6982779502868652}, {"link": "http://arxiv.org/abs/cs/0202025v1", "name": "Distance Semantics for Belief Revision", "description": "  A vast and interesting family of natural semantics for belief revision is\ndefined. Suppose one is given a distance d between any two models. One may then\ndefine the revision of a theory K by a formula a as the theory defined by the\nset of all those models of a that are closest, by d, to the set of models of K.\nThis family is characterized by a set of rationality postulates that extends\nthe AGM postulates. The new postulates describe properties of iterated\nrevisions.\n", "weight": 0.1347806602716446}, {"link": "http://arxiv.org/abs/cs/0202026v1", "name": "Preferred History Semantics for Iterated Updates", "description": "  We give a semantics to iterated update by a preference relation on possible\ndevelopments. An iterated update is a sequence of formulas, giving (incomplete)\ninformation about successive states of the world. A development is a sequence\nof models, describing a possible trajectory through time. We assume a principle\nof inertia and prefer those developments, which are compatible with the\ninformation, and avoid unnecessary changes. The logical properties of the\nupdates defined in this way are considered, and a representation result is\nproved.\n", "weight": 0.9206196069717407}, {"link": "http://arxiv.org/abs/cs/0203004v1", "name": "Stereotypical Reasoning: Logical Properties", "description": "  Stereotypical reasoning assumes that the situation at hand is one of a kind\nand that it enjoys the properties generally associated with that kind of\nsituation. It is one of the most basic forms of nonmonotonic reasoning. A\nformal model for stereotypical reasoning is proposed and the logical properties\nof this form of reasoning are studied. Stereotypical reasoning is shown to be\ncumulative under weak assumptions.\n", "weight": 0.9666599631309509}, {"link": "http://arxiv.org/abs/cs/0206003v1", "name": "Handling Defeasibilities in Action Domains", "description": "  Representing defeasibility is an important issue in common sense reasoning.\nIn reasoning about action and change, this issue becomes more difficult because\ndomain and action related defeasible information may conflict with general\ninertia rules. Furthermore, different types of defeasible information may also\ninterfere with each other during the reasoning. In this paper, we develop a\nprioritized logic programming approach to handle defeasibilities in reasoning\nabout action. In particular, we propose three action languages {\\cal AT}^{0},\n{\\cal AT}^{1} and {\\cal AT}^{2} which handle three types of defeasibilities in\naction domains named defeasible constraints, defeasible observations and\nactions with defeasible and abnormal effects respectively. Each language with a\nhigher superscript can be viewed as an extension of the language with a lower\nsuperscript. These action languages inherit the simple syntax of {\\cal A}\nlanguage but their semantics is developed in terms of transition systems where\ntransition functions are defined based on prioritized logic programs. By\nillustrating various examples, we show that our approach eventually provides a\npowerful mechanism to handle various defeasibilities in temporal prediction and\npostdiction. We also investigate semantic properties of these three action\nlanguages and characterize classes of action domains that present more\ndesirable solutions in reasoning about action within the underlying action\nlanguages.\n", "weight": 0.18750984966754913}, {"link": "http://arxiv.org/abs/cs/0206041v2", "name": "Anticipatory Guidance of Plot", "description": "  An anticipatory system for guiding plot development in interactive narratives\nis described. The executable model is a finite automaton that provides the\nimplemented system with a look-ahead. The identification of undesirable future\nstates in the model is used to guide the player, in a transparent manner. In\nthis way, too radical twists of the plot can be avoided. Since the player\nparticipates in the development of the plot, such guidance can have many forms,\ndepending on the environment of the player, on the behavior of the other\nplayers, and on the means of player interaction. We present a design method for\ninteractive narratives which produces designs suitable for the implementation\nof anticipatory mechanisms. Use of the method is illustrated by application to\nour interactive computer game Kaktus.\n", "weight": 0.6720476746559143}, {"link": "http://arxiv.org/abs/cs/0207021v1", "name": "Abduction, ASP and Open Logic Programs", "description": "  Open logic programs and open entailment have been recently proposed as an\nabstract framework for the verification of incomplete specifications based upon\nnormal logic programs and the stable model semantics. There are obvious\nanalogies between open predicates and abducible predicates. However, despite\nsuperficial similarities, there are features of open programs that have no\nimmediate counterpart in the framework of abduction and viceversa. Similarly,\nopen programs cannot be immediately simulated with answer set programming\n(ASP). In this paper we start a thorough investigation of the relationships\nbetween open inference, abduction and ASP. We shall prove that open programs\ngeneralize the other two frameworks. The generalized framework suggests\ninteresting extensions of abduction under the generalized stable model\nsemantics. In some cases, we will be able to reduce open inference to abduction\nand ASP, thereby estimating its computational complexity. At the same time, the\naforementioned reduction opens the way to new applications of abduction and\nASP.\n", "weight": 0.16043312847614288}, {"link": "http://arxiv.org/abs/cs/0207029v2", "name": "Two Representations for Iterative Non-prioritized Change", "description": "  We address a general representation problem for belief change, and describe\ntwo interrelated representations for iterative non-prioritized change: a\nlogical representation in terms of persistent epistemic states, and a\nconstructive representation in terms of flocks of bases.\n", "weight": 0.7050176858901978}, {"link": "http://arxiv.org/abs/cs/0207045v1", "name": "Compilation of Propositional Weighted Bases", "description": "  In this paper, we investigate the extent to which knowledge compilation can\nbe used to improve inference from propositional weighted bases. We present a\ngeneral notion of compilation of a weighted base that is parametrized by any\nequivalence--preserving compilation function. Both negative and positive\nresults are presented. On the one hand, complexity results are identified,\nshowing that the inference problem from a compiled weighted base is as\ndifficult as in the general case, when the prime implicates, Horn cover or\nrenamable Horn cover classes are targeted. On the other hand, we show that the\ninference problem becomes tractable whenever DNNF-compilations are used and\nclausal queries are considered. Moreover, we show that the set of all preferred\nmodels of a DNNF-compilation of a weighted base can be computed in time\npolynomial in the output size. Finally, we sketch how our results can be used\nin model-based diagnosis in order to compute the most probable diagnoses of a\nsystem.\n", "weight": 0.41098928451538086}, {"link": "http://arxiv.org/abs/cs/0207056v1", "name": "Modeling Complex Domains of Actions and Change", "description": "  This paper studies the problem of modeling complex domains of actions and\nchange within high-level action description languages. We investigate two main\nissues of concern: (a) can we represent complex domains that capture together\ndifferent problems such as ramifications, non-determinism and concurrency of\nactions, at a high-level, close to the given natural ontology of the problem\ndomain and (b) what features of such a representation can affect, and how, its\ncomputational behaviour. The paper describes the main problems faced in this\nrepresentation task and presents the results of an empirical study, carried out\nthrough a series of controlled experiments, to analyze the computational\nperformance of reasoning in these representations. The experiments compare\ndifferent representations obtained, for example, by changing the basic ontology\nof the domain or by varying the degree of use of indirect effect laws through\ndomain constraints. This study has helped to expose the main sources of\ncomputational difficulty in the reasoning and suggest some methodological\nguidelines for representing complex domains. Although our work has been carried\nout within one particular high-level description language, we believe that the\nresults, especially those that relate to the problems of representation, are\nindependent of the specific modeling language.\n", "weight": 0.990107536315918}, {"link": "http://arxiv.org/abs/cs/0207067v1", "name": "On the existence and multiplicity of extensions in dialectical\n  argumentation", "description": "  In the present paper, the existence and multiplicity problems of extensions\nare addressed. The focus is on extension of the stable type. The main result of\nthe paper is an elegant characterization of the existence and multiplicity of\nextensions in terms of the notion of dialectical justification, a close cousin\nof the notion of admissibility. The characterization is given in the context of\nthe particular logic for dialectical argumentation DEFLOG. The results are of\ndirect relevance for several well-established models of defeasible reasoning\n(like default logic, logic programming and argumentation frameworks), since\nelsewhere dialectical argumentation has been shown to have close formal\nconnections with these models.\n", "weight": 0.12604093551635742}, {"link": "http://arxiv.org/abs/cs/0208017v1", "name": "Linking Makinson and Kraus-Lehmann-Magidor preferential entailments", "description": "  About ten years ago, various notions of preferential entailment have been\nintroduced. The main reference is a paper by Kraus, Lehmann and Magidor (KLM),\none of the main competitor being a more general version defined by Makinson\n(MAK). These two versions have already been compared, but it is time to revisit\nthese comparisons. Here are our three main results: (1) These two notions are\nequivalent, provided that we restrict our attention, as done in KLM, to the\ncases where the entailment respects logical equivalence (on the left and on the\nright). (2) A serious simplification of the description of the fundamental\ncases in which MAK is equivalent to KLM, including a natural passage in both\nways. (3) The two previous results are given for preferential entailments more\ngeneral than considered in some of the original texts, but they apply also to\nthe original definitions and, for this particular case also, the models can be\nsimplified.\n", "weight": 0.05996929854154587}, {"link": "http://arxiv.org/abs/cs/0208019v1", "name": "Knowledge Representation", "description": "  This work analyses main features that should be present in knowledge\nrepresentation. It suggests a model for representation and a way to implement\nthis model in software. Representation takes care of both low-level sensor\ninformation and high-level concepts.\n", "weight": 0.7606395483016968}, {"link": "http://arxiv.org/abs/cs/0211008v4", "name": "Can the whole brain be simpler than its \"parts\"?", "description": "  This is the first in a series of connected papers discussing the problem of a\ndynamically reconfigurable universal learning neurocomputer that could serve as\na computational model for the whole human brain. The whole series is entitled\n\"The Brain Zero Project. My Brain as a Dynamically Reconfigurable Universal\nLearning Neurocomputer.\" (For more information visit the website\nwww.brain0.com.) This introductory paper is concerned with general methodology.\nIts main goal is to explain why it is critically important for both neural\nmodeling and cognitive modeling to pay much attention to the basic requirements\nof the whole brain as a complex computing system. The author argues that it can\nbe easier to develop an adequate computational model for the whole\n\"unprogrammed\" (untrained) human brain than to find adequate formal\nrepresentations of some nontrivial parts of brain's performance. (In the same\nway as, for example, it is easier to describe the behavior of a complex\nanalytical function than the behavior of its real and/or imaginary part.) The\n\"curse of dimensionality\" that plagues purely phenomenological (\"brainless\")\ncognitive theories is a natural penalty for an attempt to represent\ninsufficiently large parts of brain's performance in a state space of\ninsufficiently high dimensionality. A \"partial\" modeler encounters \"Catch 22.\"\nAn attempt to simplify a cognitive problem by artificially reducing its\ndimensionality makes the problem more difficult.\n", "weight": 0.5161325931549072}, {"link": "http://arxiv.org/abs/cs/0211027v1", "name": "Adaptive Development of Koncepts in Virtual Animats: Insights into the\n  Development of Knowledge", "description": "  As a part of our effort for studying the evolution and development of\ncognition, we present results derived from synthetic experimentations in a\nvirtual laboratory where animats develop koncepts adaptively and ground their\nmeaning through action. We introduce the term \"koncept\" to avoid confusions and\nambiguity derived from the wide use of the word \"concept\". We present the\nmodels which our animats use for abstracting koncepts from perceptions,\nplastically adapt koncepts, and associate koncepts with actions. On a more\nphilosophical vein, we suggest that knowledge is a property of a cognitive\nsystem, not an element, and therefore observer-dependent.\n", "weight": 0.9678489565849304}], "revision": [{"link": "http://arxiv.org/abs/cs/9402103v1", "name": "Bias-Driven Revision of Logical Domain Theories", "description": "  The theory revision problem is the problem of how best to go about revising a\ndeficient domain theory using information contained in examples that expose\ninaccuracies. In this paper we present our approach to the theory revision\nproblem for propositional domain theories. The approach described here, called\nPTR, uses probabilities associated with domain theory elements to numerically\ntrack the ``flow'' of proof through the theory. This allows us to measure the\nprecise role of a clause or literal in allowing or preventing a (desired or\nundesired) derivation for a given example. This information is used to\nefficiently locate and repair flawed elements of the theory. PTR is proved to\nconverge to a theory which correctly classifies all examples, and shown\nexperimentally to be fast and accurate even for deep theories.\n", "weight": 0.43752411007881165}, {"link": "http://arxiv.org/abs/cs/9504101v1", "name": "Rerepresenting and Restructuring Domain Theories: A Constructive\n  Induction Approach", "description": "  Theory revision integrates inductive learning and background knowledge by\ncombining training examples with a coarse domain theory to produce a more\naccurate theory. There are two challenges that theory revision and other\ntheory-guided systems face. First, a representation language appropriate for\nthe initial theory may be inappropriate for an improved theory. While the\noriginal representation may concisely express the initial theory, a more\naccurate theory forced to use that same representation may be bulky,\ncumbersome, and difficult to reach. Second, a theory structure suitable for a\ncoarse domain theory may be insufficient for a fine-tuned theory. Systems that\nproduce only small, local changes to a theory have limited value for\naccomplishing complex structural alterations that may be required.\nConsequently, advanced theory-guided learning systems require flexible\nrepresentation and flexible structure. An analysis of various theory revision\nsystems and theory-guided learning systems reveals specific strengths and\nweaknesses in terms of these two desired properties. Designed to capture the\nunderlying qualities of each system, a new system uses theory-guided\nconstructive induction. Experiments in three domains show improvement over\nprevious theory-guided systems. This leads to a study of the behavior,\nlimitations, and potential of theory-guided constructive induction.\n", "weight": 0.07011494785547256}, {"link": "http://arxiv.org/abs/cs/9510101v1", "name": "Diffusion of Context and Credit Information in Markovian Models", "description": "  This paper studies the problem of ergodicity of transition probability\nmatrices in Markovian models, such as hidden Markov models (HMMs), and how it\nmakes very difficult the task of learning to represent long-term context for\nsequential data. This phenomenon hurts the forward propagation of long-term\ncontext information, as well as learning a hidden state representation to\nrepresent long-term context, which depends on propagating credit information\nbackwards in time. Using results from Markov chain theory, we show that this\nproblem of diffusion of context and credit is reduced when the transition\nprobabilities approach 0 or 1, i.e., the transition probability matrices are\nsparse and the model essentially deterministic. The results found in this paper\napply to learning approaches based on continuous optimization, such as gradient\ndescent and the Baum-Welch algorithm.\n", "weight": 0.577672004699707}, {"link": "http://arxiv.org/abs/cs/9603102v1", "name": "Mean Field Theory for Sigmoid Belief Networks", "description": "  We develop a mean field theory for sigmoid belief networks based on ideas\nfrom statistical mechanics. Our mean field theory provides a tractable\napproximation to the true probability distribution in these networks; it also\nyields a lower bound on the likelihood of evidence. We demonstrate the utility\nof this framework on a benchmark problem in statistical pattern\nrecognition---the classification of handwritten digits.\n", "weight": 0.26840996742248535}, {"link": "http://arxiv.org/abs/cs/9603103v1", "name": "Improved Use of Continuous Attributes in C4.5", "description": "  A reported weakness of C4.5 in domains with continuous attributes is\naddressed by modifying the formation and evaluation of tests on continuous\nattributes. An MDL-inspired penalty is applied to such tests, eliminating some\nof them from consideration and altering the relative desirability of all tests.\nEmpirical trials show that the modifications lead to smaller decision trees\nwith higher predictive accuracies. Results also confirm that a new version of\nC4.5 incorporating these changes is superior to recent approaches that use\nglobal discretization and that construct small trees with multi-interval\nsplits.\n", "weight": 0.10917303711175919}, {"link": "http://arxiv.org/abs/cs/9704101v1", "name": "Lifeworld Analysis", "description": "  We argue that the analysis of agent/environment interactions should be\nextended to include the conventions and invariants maintained by agents\nthroughout their activity. We refer to this thicker notion of environment as a\nlifeworld and present a partial set of formal tools for describing structures\nof lifeworlds and the ways in which they computationally simplify activity. As\none specific example, we apply the tools to the analysis of the Toast system\nand show how versions of the system with very different control structures in\nfact implement a common control structure together with different conventions\nfor encoding task state in the positions or states of objects in the\nenvironment.\n", "weight": 0.47222569584846497}, {"link": "http://arxiv.org/abs/cs/9707101v1", "name": "A New Look at the Easy-Hard-Easy Pattern of Combinatorial Search\n  Difficulty", "description": "  The easy-hard-easy pattern in the difficulty of combinatorial search problems\nas constraints are added has been explained as due to a competition between the\ndecrease in number of solutions and increased pruning. We test the generality\nof this explanation by examining one of its predictions: if the number of\nsolutions is held fixed by the choice of problems, then increased pruning\nshould lead to a monotonic decrease in search cost. Instead, we find the\neasy-hard-easy pattern in median search cost even when the number of solutions\nis held constant, for some search methods. This generalizes previous\nobservations of this pattern and shows that the existing theory does not\nexplain the full range of the peak in search cost. In these cases the pattern\nappears to be due to changes in the size of the minimal unsolvable subproblems,\nrather than changing numbers of solutions.\n", "weight": 0.019473599269986153}, {"link": "http://arxiv.org/abs/cs/9803103v1", "name": "Tractability of Theory Patching", "description": "  In this paper we consider the problem of `theory patching', in which we are\ngiven a domain theory, some of whose components are indicated to be possibly\nflawed, and a set of labeled training examples for the domain concept. The\ntheory patching problem is to revise only the indicated components of the\ntheory, such that the resulting theory correctly classifies all the training\nexamples. Theory patching is thus a type of theory revision in which revisions\nare made to individual components of the theory. Our concern in this paper is\nto determine for which classes of logical domain theories the theory patching\nproblem is tractable. We consider both propositional and first-order domain\ntheories, and show that the theory patching problem is equivalent to that of\ndetermining what information contained in a theory is `stable' regardless of\nwhat revisions might be performed to the theory. We show that determining\nstability is tractable if the input theory satisfies two conditions: that\nrevisions to each theory component have monotonic effects on the classification\nof examples, and that theory components act independently in the classification\nof examples in the theory. We also show how the concepts introduced can be used\nto determine the soundness and completeness of particular theory patching\nalgorithms.\n", "weight": 0.6138424277305603}, {"link": "http://arxiv.org/abs/cs/9812010v1", "name": "Towards a computational theory of human daydreaming", "description": "  This paper examines the phenomenon of daydreaming: spontaneously recalling or\nimagining personal or vicarious experiences in the past or future. The\nfollowing important roles of daydreaming in human cognition are postulated:\nplan preparation and rehearsal, learning from failures and successes, support\nfor processes of creativity, emotion regulation, and motivation.\n  A computational theory of daydreaming and its implementation as the program\nDAYDREAMER are presented. DAYDREAMER consists of 1) a scenario generator based\non relaxed planning, 2) a dynamic episodic memory of experiences used by the\nscenario generator, 3) a collection of personal goals and control goals which\nguide the scenario generator, 4) an emotion component in which daydreams\ninitiate, and are initiated by, emotional states arising from goal outcomes,\nand 5) domain knowledge of interpersonal relations and common everyday\noccurrences.\n  The role of emotions and control goals in daydreaming is discussed. Four\ncontrol goals commonly used in guiding daydreaming are presented:\nrationalization, failure/success reversal, revenge, and preparation. The role\nof episodic memory in daydreaming is considered, including how daydreamed\ninformation is incorporated into memory and later used. An initial version of\nDAYDREAMER which produces several daydreams (in English) is currently running.\n", "weight": 0.724987268447876}, {"link": "http://arxiv.org/abs/cs/9903016v1", "name": "Modeling Belief in Dynamic Systems, Part II: Revision and Update", "description": "  The study of belief change has been an active area in philosophy and AI. In\nrecent years two special cases of belief change, belief revision and belief\nupdate, have been studied in detail. In a companion paper (Friedman & Halpern,\n1997), we introduce a new framework to model belief change. This framework\ncombines temporal and epistemic modalities with a notion of plausibility,\nallowing us to examine the change of beliefs over time. In this paper, we show\nhow belief revision and belief update can be captured in our framework. This\nallows us to compare the assumptions made by each method, and to better\nunderstand the principles underlying them. In particular, it shows that Katsuno\nand Mendelzon's notion of belief update (Katsuno & Mendelzon, 1991a) depends on\nseveral strong assumptions that may limit its applicability in artificial\nintelligence. Finally, our analysis allow us to identify a notion of minimal\nchange that underlies a broad range of belief change operations including\nrevision and update.\n", "weight": 0.9874975085258484}, {"link": "http://arxiv.org/abs/cs/0002002v1", "name": "Uniform semantic treatment of default and autoepistemic logics", "description": "  We revisit the issue of connections between two leading formalisms in\nnonmonotonic reasoning: autoepistemic logic and default logic. For each logic\nwe develop a comprehensive semantic framework based on the notion of a belief\npair. The set of all belief pairs together with the so called knowledge\nordering forms a complete lattice. For each logic, we introduce several\nsemantics by means of fixpoints of operators on the lattice of belief pairs.\nOur results elucidate an underlying isomorphism of the respective semantic\nconstructions. In particular, we show that the interpretation of defaults as\nmodal formulas proposed by Konolige allows us to represent all semantics for\ndefault logic in terms of the corresponding semantics for autoepistemic logic.\nThus, our results conclusively establish that default logic can indeed be\nviewed as a fragment of autoepistemic logic. However, as we also demonstrate,\nthe semantics of Moore and Reiter are given by different operators and occupy\ndifferent locations in their corresponding families of semantics. This result\nexplains the source of the longstanding difficulty to formally relate these two\nsemantics. In the paper, we also discuss approximating skeptical reasoning with\nautoepistemic and default logics and establish constructive principles behind\nsuch approximations.\n", "weight": 0.090774305164814}, {"link": "http://arxiv.org/abs/cs/0003008v1", "name": "Consistency Management of Normal Logic Program by Top-down Abductive\n  Proof Procedure", "description": "  This paper presents a method of computing a revision of a function-free\nnormal logic program. If an added rule is inconsistent with a program, that is,\nif it leads to a situation such that no stable model exists for a new program,\nthen deletion and addition of rules are performed to avoid inconsistency. We\nspecify a revision by translating a normal logic program into an abductive\nlogic program with abducibles to represent deletion and addition of rules. To\ncompute such deletion and addition, we propose an adaptation of our top-down\nabductive proof procedure to compute a relevant abducibles to an added rule. We\ncompute a minimally revised program, by choosing a minimal set of abducibles\namong all the sets of abducibles computed by a top-down proof procedure.\n", "weight": 0.1160028874874115}, {"link": "http://arxiv.org/abs/cs/0003021v1", "name": "Relevance Sensitive Non-Monotonic Inference on Belief Sequences", "description": "  We present a method for relevance sensitive non-monotonic inference from\nbelief sequences which incorporates insights pertaining to prioritized\ninference and relevance sensitive, inconsistency tolerant belief revision.\n  Our model uses a finite, logically open sequence of propositional formulas as\na representation for beliefs and defines a notion of inference from\nmaxiconsistent subsets of formulas guided by two orderings: a temporal\nsequencing and an ordering based on relevance relations between the conclusion\nand formulas in the sequence. The relevance relations are ternary (using\ncontext as a parameter) as opposed to standard binary axiomatizations. The\ninference operation thus defined easily handles iterated revision by\nmaintaining a revision history, blocks the derivation of inconsistent answers\nfrom a possibly inconsistent sequence and maintains the distinction between\nexplicit and implicit beliefs. In doing so, it provides a finitely presented\nformalism and a plausible model of reasoning for automated agents.\n", "weight": 0.9842072129249573}, {"link": "http://arxiv.org/abs/cs/0003031v1", "name": "Optimal Belief Revision", "description": "  We propose a new approach to belief revision that provides a way to change\nknowledge bases with a minimum of effort. We call this way of revising belief\nstates optimal belief revision. Our revision method gives special attention to\nthe fact that most belief revision processes are directed to a specific\ninformational objective. This approach to belief change is founded on notions\nsuch as optimal context and accessibility. For the sentential model of belief\nstates we provide both a formal description of contexts as sub-theories\ndetermined by three parameters and a method to construct contexts. Next, we\nintroduce an accessibility ordering for belief sets, which we then use for\nselecting the best (optimal) contexts with respect to the processing effort\ninvolved in the revision. Then, for finitely axiomatizable knowledge bases, we\ncharacterize a finite accessibility ranking from which the accessibility\nordering for the entire base is generated and show how to determine the ranking\nof an arbitrary sentence in the language. Finally, we define the adjustment of\nthe accessibility ranking of a revised base of a belief set.\n", "weight": 0.9887472987174988}, {"link": "http://arxiv.org/abs/cs/0003044v1", "name": "On the tractable counting of theory models and its application to belief\n  revision and truth maintenance", "description": "  We introduced decomposable negation normal form (DNNF) recently as a\ntractable form of propositional theories, and provided a number of powerful\nlogical operations that can be performed on it in polynomial time. We also\npresented an algorithm for compiling any conjunctive normal form (CNF) into\nDNNF and provided a structure-based guarantee on its space and time complexity.\nWe present in this paper a linear-time algorithm for converting an ordered\nbinary decision diagram (OBDD) representation of a propositional theory into an\nequivalent DNNF, showing that DNNFs scale as well as OBDDs. We also identify a\nsubclass of DNNF which we call deterministic DNNF, d-DNNF, and show that the\nprevious complexity guarantees on compiling DNNF continue to hold for this\nstricter subclass, which has stronger properties. In particular, we present a\nnew operation on d-DNNF which allows us to count its models under the\nassertion, retraction and flipping of every literal by traversing the d-DNNF\ntwice. That is, after such traversal, we can test in constant-time: the\nentailment of any literal by the d-DNNF, and the consistency of the d-DNNF\nunder the retraction or flipping of any literal. We demonstrate the\nsignificance of these new operations by showing how they allow us to implement\nlinear-time, complete truth maintenance systems and linear-time, complete\nbelief revision systems for two important classes of propositional theories.\n", "weight": 0.2383108139038086}, {"link": "http://arxiv.org/abs/cs/0003052v3", "name": "A Consistency-Based Model for Belief Change: Preliminary Report", "description": "  We present a general, consistency-based framework for belief change.\nInformally, in revising K by A, we begin with A and incorporate as much of K as\nconsistently possible. Formally, a knowledge base K and sentence A are\nexpressed, via renaming propositions in K, in separate languages. Using a\nmaximization process, we assume the languages are the same insofar as\nconsistently possible. Lastly, we express the resultant knowledge base in a\nsingle language. There may be more than one way in which A can be so extended\nby K: in choice revision, one such ``extension'' represents the revised state;\nalternately revision consists of the intersection of all such extensions.\n  The most general formulation of our approach is flexible enough to express\nother approaches to revision and update, the merging of knowledge bases, and\nthe incorporation of static and dynamic integrity constraints. Our framework\ndiffers from work based on ordinal conditional functions, notably with respect\nto iterated revision. We argue that the approach is well-suited for\nimplementation: the choice revision operator gives better complexity results\nthan general revision; the approach can be expressed in terms of a finite\nknowledge base; and the scope of a revision can be restricted to just those\npropositions mentioned in the sentence for revision A.\n", "weight": 0.30205515027046204}, {"link": "http://arxiv.org/abs/cs/0003059v1", "name": "SATEN: An Object-Oriented Web-Based Revision and Extraction Engine", "description": "  SATEN is an object-oriented web-based extraction and belief revision engine.\nIt runs on any computer via a Java 1.1 enabled browser such as Netscape 4.\nSATEN performs belief revision based on the AGM approach. The extraction and\nbelief revision reasoning engines operate on a user specified ranking of\ninformation. One of the features of SATEN is that it can be used to integrate\nmutually inconsistent commensuate rankings into a consistent ranking.\n", "weight": 0.9571317434310913}, {"link": "http://arxiv.org/abs/cs/0011012v3", "name": "Causes and Explanations: A Structural-Model Approach, Part I: Causes", "description": "  We propose a new definition of actual cause, using structural equations to\nmodel counterfactuals. We show that the definition yields a plausible and\nelegant account of causation that handles well examples which have caused\nproblems for other definitions and resolves major difficulties in the\ntraditional account.\n", "weight": 0.9526200890541077}, {"link": "http://arxiv.org/abs/cs/0105022v1", "name": "Multi-Channel Parallel Adaptation Theory for Rule Discovery", "description": "  In this paper, we introduce a new machine learning theory based on\nmulti-channel parallel adaptation for rule discovery. This theory is\ndistinguished from the familiar parallel-distributed adaptation theory of\nneural networks in terms of channel-based convergence to the target rules. We\nshow how to realize this theory in a learning system named CFRule. CFRule is a\nparallel weight-based model, but it departs from traditional neural computing\nin that its internal knowledge is comprehensible. Furthermore, when the model\nconverges upon training, each channel converges to a target rule. The model\nadaptation rule is derived by multi-level parallel weight optimization based on\ngradient descent. Since, however, gradient descent only guarantees local\noptimization, a multi-channel regression-based optimization strategy is\ndeveloped to effectively deal with this problem. Formally, we prove that the\nCFRule model can explicitly and precisely encode any given rule set. Also, we\nprove a property related to asynchronous parallel convergence, which is a\ncritical element of the multi-channel parallel adaptation theory for rule\nlearning. Thanks to the quantizability nature of the CFRule model, rules can be\nextracted completely and soundly via a threshold-based mechanism. Finally, the\npractical application of the theory is demonstrated in DNA promoter recognition\nand hepatitis prognosis prediction.\n", "weight": 0.9891537427902222}, {"link": "http://arxiv.org/abs/cs/0109006v1", "name": "On Properties of Update Sequences Based on Causal Rejection", "description": "  We consider an approach to update nonmonotonic knowledge bases represented as\nextended logic programs under answer set semantics. New information is\nincorporated into the current knowledge base subject to a causal rejection\nprinciple enforcing that, in case of conflicts, more recent rules are preferred\nand older rules are overridden. Such a rejection principle is also exploited in\nother approaches to update logic programs, e.g., in dynamic logic programming\nby Alferes et al. We give a thorough analysis of properties of our approach, to\nget a better understanding of the causal rejection principle. We review\npostulates for update and revision operators from the area of theory change and\nnonmonotonic reasoning, and some new properties are considered as well. We then\nconsider refinements of our semantics which incorporate a notion of minimality\nof change. As well, we investigate the relationship to other approaches,\nshowing that our approach is semantically equivalent to inheritance programs by\nBuccafurri et al. and that it coincides with certain classes of dynamic logic\nprograms, for which we provide characterizations in terms of graph conditions.\nTherefore, most of our results about properties of causal rejection principle\napply to these approaches as well. Finally, we deal with computational\ncomplexity of our approach, and outline how the update semantics and its\nrefinements can be implemented on top of existing logic programming engines.\n", "weight": 0.22146208584308624}, {"link": "http://arxiv.org/abs/cs/0111060v1", "name": "Gradient-based Reinforcement Planning in Policy-Search Methods", "description": "  We introduce a learning method called ``gradient-based reinforcement\nplanning'' (GREP). Unlike traditional DP methods that improve their policy\nbackwards in time, GREP is a gradient-based method that plans ahead and\nimproves its policy before it actually acts in the environment. We derive\nformulas for the exact policy gradient that maximizes the expected future\nreward and confirm our ideas with numerical experiments.\n", "weight": 0.8737785220146179}, {"link": "http://arxiv.org/abs/cs/0112015v1", "name": "Rational Competitive Analysis", "description": "  Much work in computer science has adopted competitive analysis as a tool for\ndecision making under uncertainty. In this work we extend competitive analysis\nto the context of multi-agent systems. Unlike classical competitive analysis\nwhere the behavior of an agent's environment is taken to be arbitrary, we\nconsider the case where an agent's environment consists of other agents. These\nagents will usually obey some (minimal) rationality constraints. This leads to\nthe definition of rational competitive analysis. We introduce the concept of\nrational competitive analysis, and initiate the study of competitive analysis\nfor multi-agent systems. We also discuss the application of rational\ncompetitive analysis to the context of bidding games, as well as to the\nclassical one-way trading problem.\n", "weight": 0.4220404326915741}, {"link": "http://arxiv.org/abs/cs/0202022v1", "name": "What does a conditional knowledge base entail?", "description": "  This paper presents a logical approach to nonmonotonic reasoning based on the\nnotion of a nonmonotonic consequence relation. A conditional knowledge base,\nconsisting of a set of conditional assertions of the type \"if ... then ...\",\nrepresents the explicit defeasible knowledge an agent has about the way the\nworld generally behaves. We look for a plausible definition of the set of all\nconditional assertions entailed by a conditional knowledge base. In a previous\npaper, S. Kraus and the authors defined and studied \"preferential\" consequence\nrelations. They noticed that not all preferential relations could be considered\nas reasonable inference procedures. This paper studies a more restricted class\nof consequence relations, \"rational\" relations. It is argued that any\nreasonable nonmonotonic inference procedure should define a rational relation.\nIt is shown that the rational relations are exactly those that may be\nrepresented by a \"ranked\" preferential model, or by a (non-standard)\nprobabilistic model. The rational closure of a conditional knowledge base is\ndefined and shown to provide an attractive answer to the question of the title.\nGlobal properties of this closure operation are proved: it is a cumulative\noperation. It is also computationally tractable. This paper assumes the\nunderlying language is propositional.\n", "weight": 0.45253151655197144}, {"link": "http://arxiv.org/abs/cs/0204032v1", "name": "Belief Revision and Rational Inference", "description": "  The (extended) AGM postulates for belief revision seem to deal with the\nrevision of a given theory K by an arbitrary formula, but not to constrain the\nrevisions of two different theories by the same formula. A new postulate is\nproposed and compared with other similar postulates that have been proposed in\nthe literature. The AGM revisions that satisfy this new postulate stand in\none-to-one correspondence with the rational, consistency-preserving relations.\nThis correspondence is described explicitly. Two viewpoints on iterative\nrevisions are distinguished and discussed.\n", "weight": 0.5711367726325989}, {"link": "http://arxiv.org/abs/cs/0207075v1", "name": "Nonmonotonic Probabilistic Logics between Model-Theoretic Probabilistic\n  Logic and Probabilistic Logic under Coherence", "description": "  Recently, it has been shown that probabilistic entailment under coherence is\nweaker than model-theoretic probabilistic entailment. Moreover, probabilistic\nentailment under coherence is a generalization of default entailment in System\nP. In this paper, we continue this line of research by presenting probabilistic\ngeneralizations of more sophisticated notions of classical default entailment\nthat lie between model-theoretic probabilistic entailment and probabilistic\nentailment under coherence. That is, the new formalisms properly generalize\ntheir counterparts in classical default reasoning, they are weaker than\nmodel-theoretic probabilistic entailment, and they are stronger than\nprobabilistic entailment under coherence. The new formalisms are useful\nespecially for handling probabilistic inconsistencies related to conditioning\non zero events. They can also be applied for probabilistic belief revision.\nMore generally, in the same spirit as a similar previous paper, this paper\nsheds light on exciting new formalisms for probabilistic reasoning beyond the\nwell-known standard ones.\n", "weight": 0.053675148636102676}, {"link": "http://arxiv.org/abs/cs/0210004v1", "name": "Revising Partially Ordered Beliefs", "description": "  This paper deals with the revision of partially ordered beliefs. It proposes\na semantic representation of epistemic states by partial pre-orders on\ninterpretations and a syntactic representation by partially ordered belief\nbases. Two revision operations, the revision stemming from the history of\nobservations and the possibilistic revision, defined when the epistemic state\nis represented by a total pre-order, are generalized, at a semantic level, to\nthe case of a partial pre-order on interpretations, and at a syntactic level,\nto the case of a partially ordered belief base. The equivalence between the two\nrepresentations is shown for the two revision operations.\n", "weight": 0.34268882870674133}], "system": [{"link": "http://arxiv.org/abs/cs/9402102v1", "name": "Substructure Discovery Using Minimum Description Length and Background\n  Knowledge", "description": "  The ability to identify interesting and repetitive substructures is an\nessential component to discovering knowledge in structural data. We describe a\nnew version of our SUBDUE substructure discovery system based on the minimum\ndescription length principle. The SUBDUE system discovers substructures that\ncompress the original data and represent structural concepts in the data. By\nreplacing previously-discovered substructures in the data, multiple passes of\nSUBDUE produce a hierarchical description of the structural regularities in the\ndata. SUBDUE uses a computationally-bounded inexact graph match that identifies\nsimilar, but not identical, instances of a substructure and finds an\napproximate measure of closeness of two substructures when under computational\nconstraints. In addition to the minimum description length principle, other\nbackground knowledge can be used by SUBDUE to guide the search towards more\nappropriate substructures. Experiments in a variety of domains demonstrate\nSUBDUE's ability to find substructures capable of compressing the original data\nand to discover structural concepts important to the domain. Description of\nOnline Appendix: This is a compressed tar file containing the SUBDUE discovery\nsystem, written in C. The program accepts as input databases represented in\ngraph form, and will output discovered substructures with their corresponding\nvalue.\n", "weight": 0.6737871766090393}, {"link": "http://arxiv.org/abs/cs/9406102v1", "name": "Applying GSAT to Non-Clausal Formulas", "description": "  In this paper we describe how to modify GSAT so that it can be applied to\nnon-clausal formulas. The idea is to use a particular ``score'' function which\ngives the number of clauses of the CNF conversion of a formula which are false\nunder a given truth assignment. Its value is computed in linear time, without\nconstructing the CNF conversion itself. The proposed methodology applies to\nmost of the variants of GSAT proposed so far.\n", "weight": 0.08816147595643997}, {"link": "http://arxiv.org/abs/cs/9408103v1", "name": "A System for Induction of Oblique Decision Trees", "description": "  This article describes a new system for induction of oblique decision trees.\nThis system, OC1, combines deterministic hill-climbing with two forms of\nrandomization to find a good oblique split (in the form of a hyperplane) at\neach node of a decision tree. Oblique decision tree methods are tuned\nespecially for domains in which the attributes are numeric, although they can\nbe adapted to symbolic or mixed symbolic/numeric attributes. We present\nextensive empirical studies, using both real and artificial data, that analyze\nOC1's ability to construct oblique trees that are smaller and more accurate\nthan their axis-parallel counterparts. We also examine the benefits of\nrandomization for the construction of oblique decision trees.\n", "weight": 0.5098453760147095}, {"link": "http://arxiv.org/abs/cs/9412101v1", "name": "Wrap-Up: a Trainable Discourse Module for Information Extraction", "description": "  The vast amounts of on-line text now available have led to renewed interest\nin information extraction (IE) systems that analyze unrestricted text,\nproducing a structured representation of selected information from the text.\nThis paper presents a novel approach that uses machine learning to acquire\nknowledge for some of the higher level IE processing. Wrap-Up is a trainable IE\ndiscourse component that makes intersentential inferences and identifies\nlogical relations among information extracted from the text. Previous\ncorpus-based approaches were limited to lower level processing such as\npart-of-speech tagging, lexical disambiguation, and dictionary construction.\nWrap-Up is fully trainable, and not only automatically decides what classifiers\nare needed, but even derives the feature set for each classifier automatically.\nPerformance equals that of a partially trainable discourse module requiring\nmanual customization for each domain.\n", "weight": 0.9819951057434082}, {"link": "http://arxiv.org/abs/cs/9505102v1", "name": "Adaptive Load Balancing: A Study in Multi-Agent Learning", "description": "  We study the process of multi-agent reinforcement learning in the context of\nload balancing in a distributed system, without use of either central\ncoordination or explicit communication. We first define a precise framework in\nwhich to study adaptive load balancing, important features of which are its\nstochastic nature and the purely local information available to individual\nagents. Given this framework, we show illuminating results on the interplay\nbetween basic adaptive behavior parameters and their effect on system\nefficiency. We then investigate the properties of adaptive load balancing in\nheterogeneous populations, and address the issue of exploration vs.\nexploitation in that context. Finally, we show that naive use of communication\nmay not improve, and might even harm system efficiency.\n", "weight": 0.48495128750801086}, {"link": "http://arxiv.org/abs/cs/9510103v1", "name": "Learning Membership Functions in a Function-Based Object Recognition\n  System", "description": "  Functionality-based recognition systems recognize objects at the category\nlevel by reasoning about how well the objects support the expected function.\nSuch systems naturally associate a ``measure of goodness'' or ``membership\nvalue'' with a recognized object. This measure of goodness is the result of\ncombining individual measures, or membership values, from potentially many\nprimitive evaluations of different properties of the object's shape. A\nmembership function is used to compute the membership value when evaluating a\nprimitive of a particular physical property of an object. In previous versions\nof a recognition system known as Gruff, the membership function for each of the\nprimitive evaluations was hand-crafted by the system designer. In this paper,\nwe provide a learning component for the Gruff system, called Omlet, that\nautomatically learns membership functions given a set of example objects\nlabeled with their desired category measure. The learning algorithm is\ngenerally applicable to any problem in which low-level membership values are\ncombined through an and-or tree structure to give a final overall membership\nvalue.\n", "weight": 0.9863607287406921}, {"link": "http://arxiv.org/abs/cs/9511101v1", "name": "Flexibly Instructable Agents", "description": "  This paper presents an approach to learning from situated, interactive\ntutorial instruction within an ongoing agent. Tutorial instruction is a\nflexible (and thus powerful) paradigm for teaching tasks because it allows an\ninstructor to communicate whatever types of knowledge an agent might need in\nwhatever situations might arise. To support this flexibility, however, the\nagent must be able to learn multiple kinds of knowledge from a broad range of\ninstructional interactions. Our approach, called situated explanation, achieves\nsuch learning through a combination of analytic and inductive techniques. It\ncombines a form of explanation-based learning that is situated for each\ninstruction with a full suite of contextually guided responses to incomplete\nexplanations. The approach is implemented in an agent called Instructo-Soar\nthat learns hierarchies of new tasks and other domain knowledge from\ninteractive natural language instructions. Instructo-Soar meets three key\nrequirements of flexible instructability that distinguish it from previous\nsystems: (1) it can take known or unknown commands at any instruction point;\n(2) it can handle instructions that apply to either its current situation or to\na hypothetical situation specified in language (as in, for instance,\nconditional instructions); and (3) it can learn, from instructions, each class\nof knowledge it uses to perform tasks.\n", "weight": 0.19005344808101654}, {"link": "http://arxiv.org/abs/cs/9512102v1", "name": "Vision-Based Road Detection in Automotive Systems: A Real-Time\n  Expectation-Driven Approach", "description": "  The main aim of this work is the development of a vision-based road detection\nsystem fast enough to cope with the difficult real-time constraints imposed by\nmoving vehicle applications. The hardware platform, a special-purpose massively\nparallel system, has been chosen to minimize system production and operational\ncosts. This paper presents a novel approach to expectation-driven low-level\nimage segmentation, which can be mapped naturally onto mesh-connected massively\nparallel SIMD architectures capable of handling hierarchical data structures.\nThe input image is assumed to contain a distorted version of a given template;\na multiresolution stretching process is used to reshape the original template\nin accordance with the acquired image content, minimizing a potential function.\nThe distorted template is the process output.\n", "weight": 0.874697208404541}, {"link": "http://arxiv.org/abs/cs/9512107v1", "name": "Rule-based Machine Learning Methods for Functional Prediction", "description": "  We describe a machine learning method for predicting the value of a\nreal-valued function, given the values of multiple input variables. The method\ninduces solutions from samples in the form of ordered disjunctive normal form\n(DNF) decision rules. A central objective of the method and representation is\nthe induction of compact, easily interpretable solutions. This rule-based\ndecision model can be extended to search efficiently for similar cases prior to\napproximating function values. Experimental results on real-world data\ndemonstrate that the new techniques are competitive with existing machine\nlearning and statistical methods and can sometimes yield superior regression\nperformance.\n", "weight": 0.2984001934528351}, {"link": "http://arxiv.org/abs/cs/9604103v1", "name": "Iterative Optimization and Simplification of Hierarchical Clusterings", "description": "  Clustering is often used for discovering structure in data. Clustering\nsystems differ in the objective function used to evaluate clustering quality\nand the control strategy used to search the space of clusterings. Ideally, the\nsearch strategy should consistently construct clusterings of high quality, but\nbe computationally inexpensive as well. In general, we cannot have it both\nways, but we can partition the search so that a system inexpensively constructs\na `tentative' clustering for initial examination, followed by iterative\noptimization, which continues to search in background for improved clusterings.\nGiven this motivation, we evaluate an inexpensive strategy for creating initial\nclusterings, coupled with several control strategies for iterative\noptimization, each of which repeatedly modifies an initial clustering in search\nof a better one. One of these methods appears novel as an iterative\noptimization strategy in clustering contexts. Once a clustering has been\nconstructed it is judged by analysts -- often according to task-specific\ncriteria. Several authors have abstracted these criteria and posited a generic\nperformance task akin to pattern completion, where the error rate over\ncompleted patterns is used to `externally' judge clustering utility. Given this\nperformance task, we adapt resampling-based pruning strategies used by\nsupervised learning systems to the task of simplifying hierarchical\nclusterings, thus promising to ease post-clustering analysis. Finally, we\npropose a number of objective functions, based on attribute-selection measures\nfor decision-tree induction, that might perform well on the error rate and\nsimplicity dimensions.\n", "weight": 0.24502477049827576}, {"link": "http://arxiv.org/abs/cs/9605101v1", "name": "Further Experimental Evidence against the Utility of Occam's Razor", "description": "  This paper presents new experimental evidence against the utility of Occam's\nrazor. A~systematic procedure is presented for post-processing decision trees\nproduced by C4.5. This procedure was derived by rejecting Occam's razor and\ninstead attending to the assumption that similar objects are likely to belong\nto the same class. It increases a decision tree's complexity without altering\nthe performance of that tree on the training data from which it is inferred.\nThe resulting more complex decision trees are demonstrated to have, on average,\nfor a variety of common learning tasks, higher predictive accuracy than the\nless complex original decision trees. This result raises considerable doubt\nabout the utility of Occam's razor as it is commonly applied in modern machine\nlearning.\n", "weight": 0.31894731521606445}, {"link": "http://arxiv.org/abs/cs/9606102v1", "name": "On Partially Controlled Multi-Agent Systems", "description": "  Motivated by the control theoretic distinction between controllable and\nuncontrollable events, we distinguish between two types of agents within a\nmulti-agent system: controllable agents, which are directly controlled by the\nsystem's designer, and uncontrollable agents, which are not under the\ndesigner's direct control. We refer to such systems as partially controlled\nmulti-agent systems, and we investigate how one might influence the behavior of\nthe uncontrolled agents through appropriate design of the controlled agents. In\nparticular, we wish to understand which problems are naturally described in\nthese terms, what methods can be applied to influence the uncontrollable\nagents, the effectiveness of such methods, and whether similar methods work\nacross different domains. Using a game-theoretic framework, this paper studies\nthe design of partially controlled multi-agent systems in two contexts: in one\ncontext, the uncontrollable agents are expected utility maximizers, while in\nthe other they are reinforcement learners. We suggest different techniques for\ncontrolling agents' behavior in each domain, assess their success, and examine\ntheir relationship.\n", "weight": 0.7860144972801208}, {"link": "http://arxiv.org/abs/cs/9609102v1", "name": "Cue Phrase Classification Using Machine Learning", "description": "  Cue phrases may be used in a discourse sense to explicitly signal discourse\nstructure, but also in a sentential sense to convey semantic rather than\nstructural information. Correctly classifying cue phrases as discourse or\nsentential is critical in natural language processing systems that exploit\ndiscourse structure, e.g., for performing tasks such as anaphora resolution and\nplan recognition. This paper explores the use of machine learning for\nclassifying cue phrases as discourse or sentential. Two machine learning\nprograms (Cgrendel and C4.5) are used to induce classification models from sets\nof pre-classified cue phrases and their features in text and speech. Machine\nlearning is shown to be an effective technique for not only automating the\ngeneration of classification models, but also for improving upon previous\nresults. When compared to manually derived classification models already in the\nliterature, the learned models often perform with higher accuracy and contain\nnew linguistic insights into the data. In addition, the ability to\nautomatically construct classification models makes it easier to comparatively\nanalyze the utility of alternative feature representations of the data.\nFinally, the ease of retraining makes the learning approach more scalable and\nflexible than manual methods.\n", "weight": 0.7585009336471558}, {"link": "http://arxiv.org/abs/cs/9610102v1", "name": "Learning First-Order Definitions of Functions", "description": "  First-order learning involves finding a clause-form definition of a relation\nfrom examples of the relation and relevant background information. In this\npaper, a particular first-order learning system is modified to customize it for\nfinding definitions of functional relations. This restriction leads to faster\nlearning times and, in some cases, to definitions that have higher predictive\naccuracy. Other first-order learning systems might benefit from similar\nspecialization.\n", "weight": 0.13457229733467102}, {"link": "http://arxiv.org/abs/cs/9611101v1", "name": "MUSE CSP: An Extension to the Constraint Satisfaction Problem", "description": "  This paper describes an extension to the constraint satisfaction problem\n(CSP) called MUSE CSP (MUltiply SEgmented Constraint Satisfaction Problem).\nThis extension is especially useful for those problems which segment into\nmultiple sets of partially shared variables. Such problems arise naturally in\nsignal processing applications including computer vision, speech processing,\nand handwriting recognition. For these applications, it is often difficult to\nsegment the data in only one way given the low-level information utilized by\nthe segmentation algorithms. MUSE CSP can be used to compactly represent\nseveral similar instances of the constraint satisfaction problem. If multiple\ninstances of a CSP have some common variables which have the same domains and\nconstraints, then they can be combined into a single instance of a MUSE CSP,\nreducing the work required to apply the constraints. We introduce the concepts\nof MUSE node consistency, MUSE arc consistency, and MUSE path consistency. We\nthen demonstrate how MUSE CSP can be used to compactly represent lexically\nambiguous sentences and the multiple sentence hypotheses that are often\ngenerated by speech recognition algorithms so that grammar constraints can be\nused to provide parses for all syntactically correct sentences. Algorithms for\nMUSE arc and path consistency are provided. Finally, we discuss how to create a\nMUSE CSP from a set of CSPs which are labeled to indicate when the same\nvariable is shared by more than a single CSP.\n", "weight": 0.37658506631851196}, {"link": "http://arxiv.org/abs/cs/9612102v1", "name": "Quantitative Results Comparing Three Intelligent Interfaces for\n  Information Capture: A Case Study Adding Name Information into an Electronic\n  Personal Organizer", "description": "  Efficiently entering information into a computer is key to enjoying the\nbenefits of computing. This paper describes three intelligent user interfaces:\nhandwriting recognition, adaptive menus, and predictive fillin. In the context\nof adding a personUs name and address to an electronic organizer, tests show\nhandwriting recognition is slower than typing on an on-screen, soft keyboard,\nwhile adaptive menus and predictive fillin can be twice as fast. This paper\nalso presents strategies for applying these three interfaces to other\ninformation collection domains.\n", "weight": 0.5873226523399353}, {"link": "http://arxiv.org/abs/cs/9701101v1", "name": "Improved Heterogeneous Distance Functions", "description": "  Instance-based learning techniques typically handle continuous and linear\ninput values well, but often do not handle nominal input attributes\nappropriately. The Value Difference Metric (VDM) was designed to find\nreasonable distance values between nominal attribute values, but it largely\nignores continuous attributes, requiring discretization to map continuous\nvalues into nominal values. This paper proposes three new heterogeneous\ndistance functions, called the Heterogeneous Value Difference Metric (HVDM),\nthe Interpolated Value Difference Metric (IVDM), and the Windowed Value\nDifference Metric (WVDM). These new distance functions are designed to handle\napplications with nominal attributes, continuous attributes, or both. In\nexperiments on 48 applications the new distance metrics achieve higher\nclassification accuracy on average than three previous distance functions on\nthose datasets that have both nominal and continuous attributes.\n", "weight": 0.9826894402503967}, {"link": "http://arxiv.org/abs/cs/9705102v1", "name": "Connectionist Theory Refinement: Genetically Searching the Space of\n  Network Topologies", "description": "  An algorithm that learns from a set of examples should ideally be able to\nexploit the available resources of (a) abundant computing power and (b)\ndomain-specific knowledge to improve its ability to generalize. Connectionist\ntheory-refinement systems, which use background knowledge to select a neural\nnetwork's topology and initial weights, have proven to be effective at\nexploiting domain-specific knowledge; however, most do not exploit available\ncomputing power. This weakness occurs because they lack the ability to refine\nthe topology of the neural networks they produce, thereby limiting\ngeneralization, especially when given impoverished domain theories. We present\nthe REGENT algorithm which uses (a) domain-specific knowledge to help create an\ninitial population of knowledge-based neural networks and (b) genetic operators\nof crossover and mutation (specifically designed for knowledge-based networks)\nto continually search for better network topologies. Experiments on three\nreal-world domains indicate that our new algorithm is able to significantly\nincrease generalization compared to a standard connectionist theory-refinement\nsystem, as well as our previous algorithm for growing knowledge-based networks.\n", "weight": 0.20908434689044952}, {"link": "http://arxiv.org/abs/cs/9709101v1", "name": "Towards Flexible Teamwork", "description": "  Many AI researchers are today striving to build agent teams for complex,\ndynamic multi-agent domains, with intended applications in arenas such as\neducation, training, entertainment, information integration, and collective\nrobotics. Unfortunately, uncertainties in these complex, dynamic domains\nobstruct coherent teamwork. In particular, team members often encounter\ndiffering, incomplete, and possibly inconsistent views of their environment.\nFurthermore, team members can unexpectedly fail in fulfilling responsibilities\nor discover unexpected opportunities. Highly flexible coordination and\ncommunication is key in addressing such uncertainties. Simply fitting\nindividual agents with precomputed coordination plans will not do, for their\ninflexibility can cause severe failures in teamwork, and their\ndomain-specificity hinders reusability. Our central hypothesis is that the key\nto such flexibility and reusability is providing agents with general models of\nteamwork. Agents exploit such models to autonomously reason about coordination\nand communication, providing requisite flexibility. Furthermore, the models\nenable reuse across domains, both saving implementation effort and enforcing\nconsistency. This article presents one general, implemented model of teamwork,\ncalled STEAM. The basic building block of teamwork in STEAM is joint intentions\n(Cohen & Levesque, 1991b); teamwork in STEAM is based on agents' building up a\n(partial) hierarchy of joint intentions (this hierarchy is seen to parallel\nGrosz & Kraus's partial SharedPlans, 1996). Furthermore, in STEAM, team members\nmonitor the team's and individual members' performance, reorganizing the team\nas necessary. Finally, decision-theoretic communication selectivity in STEAM\nensures reduction in communication overheads of teamwork, with appropriate\nsensitivity to the environmental conditions. This article describes STEAM's\napplication in three different complex domains, and presents detailed empirical\nresults.\n", "weight": 0.7296851873397827}, {"link": "http://arxiv.org/abs/cs/9806101v1", "name": "Model-Based Diagnosis using Structured System Descriptions", "description": "  This paper presents a comprehensive approach for model-based diagnosis which\nincludes proposals for characterizing and computing preferred diagnoses,\nassuming that the system description is augmented with a system structure (a\ndirected graph explicating the interconnections between system components).\nSpecifically, we first introduce the notion of a consequence, which is a\nsyntactically unconstrained propositional sentence that characterizes all\nconsistency-based diagnoses and show that standard characterizations of\ndiagnoses, such as minimal conflicts, correspond to syntactic variations on a\nconsequence. Second, we propose a new syntactic variation on the consequence\nknown as negation normal form (NNF) and discuss its merits compared to standard\nvariations. Third, we introduce a basic algorithm for computing consequences in\nNNF given a structured system description. We show that if the system structure\ndoes not contain cycles, then there is always a linear-size consequence in NNF\nwhich can be computed in linear time. For arbitrary system structures, we show\na precise connection between the complexity of computing consequences and the\ntopology of the underlying system structure. Finally, we present an algorithm\nthat enumerates the preferred diagnoses characterized by a consequence. The\nalgorithm is shown to take linear time in the size of the consequence if the\npreference criterion satisfies some general conditions.\n", "weight": 0.8804372549057007}, {"link": "http://arxiv.org/abs/cs/9910016v1", "name": "Probabilistic Agent Programs", "description": "  Agents are small programs that autonomously take actions based on changes in\ntheir environment or ``state.'' Over the last few years, there have been an\nincreasing number of efforts to build agents that can interact and/or\ncollaborate with other agents. In one of these efforts, Eiter, Subrahmanian amd\nPick (AIJ, 108(1-2), pages 179-255) have shown how agents may be built on top\nof legacy code. However, their framework assumes that agent states are\ncompletely determined, and there is no uncertainty in an agent's state. Thus,\ntheir framework allows an agent developer to specify how his agents will react\nwhen the agent is 100% sure about what is true/false in the world state. In\nthis paper, we propose the concept of a \\emph{probabilistic agent program} and\nshow how, given an arbitrary program written in any imperative language, we may\nbuild a declarative ``probabilistic'' agent program on top of it which supports\ndecision making in the presence of uncertainty. We provide two alternative\nsemantics for probabilistic agent programs. We show that the second semantics,\nthough more epistemically appealing, is more complex to compute. We provide\nsound and complete algorithms to compute the semantics of \\emph{positive} agent\nprograms.\n", "weight": 0.07469158619642258}, {"link": "http://arxiv.org/abs/cs/0007004v1", "name": "Brainstorm/J: a Java Framework for Intelligent Agents", "description": "  Despite the effort of many researchers in the area of multi-agent systems\n(MAS) for designing and programming agents, a few years ago the research\ncommunity began to take into account that common features among different MAS\nexists. Based on these common features, several tools have tackled the problem\nof agent development on specific application domains or specific types of\nagents. As a consequence, their scope is restricted to a subset of the huge\napplication domain of MAS. In this paper we propose a generic infrastructure\nfor programming agents whose name is Brainstorm/J. The infrastructure has been\nimplemented as an object oriented framework. As a consequence, our approach\nsupports a broader scope of MAS applications than previous efforts, being\nflexible and reusable.\n", "weight": 0.9137561917304993}, {"link": "http://arxiv.org/abs/cs/0106006v1", "name": "A Constraint-Driven System for Contract Assembly", "description": "  We present an approach for modelling the structure and coarse content of\nlegal documents with a view to providing automated support for the drafting of\ncontracts and contract database retrieval. The approach is designed to be\napplicable where contract drafting is based on model-form contracts or on\nexisting examples of a similar type. The main features of the approach are: (1)\nthe representation addresses the structure and the interrelationships between\nthe constituent parts of contracts, but not the text of the document itself;\n(2) the representation of documents is separated from the mechanisms that\nmanipulate it; and (3) the drafting process is subject to a collection of\nexplicitly stated constraints that govern the structure of the documents. We\ndescribe the representation of document instances and of 'generic documents',\nwhich are data structures used to drive the creation of new document instances,\nand we show extracts from a sample session to illustrate the features of a\nprototype system implemented in MacProlog.\n", "weight": 0.9812456965446472}, {"link": "http://arxiv.org/abs/cs/0106007v1", "name": "Modelling Contractual Arguments", "description": "  One influential approach to assessing the \"goodness\" of arguments is offered\nby the Pragma-Dialectical school (p-d) (Eemeren & Grootendorst 1992). This can\nbe compared with Rhetorical Structure Theory (RST) (Mann & Thompson 1988), an\napproach that originates in discourse analysis. In p-d terms an argument is\ngood if it avoids committing a fallacy, whereas in RST terms an argument is\ngood if it is coherent. RST has been criticised (Snoeck Henkemans 1997) for\nproviding only a partially functional account of argument, and similar\ncriticisms have been raised in the Natural Language Generation (NLG)\ncommunity-particularly by Moore & Pollack (1992)- with regards to its account\nof intentionality in text in general. Mann and Thompson themselves note that\nalthough RST can be successfully applied to a wide range of texts from diverse\ndomains, it fails to characterise some types of text, most notably legal\ncontracts. There is ongoing research in the Artificial Intelligence and Law\ncommunity exploring the potential for providing electronic support to contract\nnegotiators, focusing on long-term, complex engineering agreements (see for\nexample Daskalopulu & Sergot 1997). This paper provides a brief introduction to\nRST and illustrates its shortcomings with respect to contractual text. An\nalternative approach for modelling argument structure is presented which not\nonly caters for contractual text, but also overcomes the aforementioned\nlimitations of RST.\n", "weight": 0.9836320877075195}, {"link": "http://arxiv.org/abs/cs/0207083v1", "name": "Evaluating Defaults", "description": "  We seek to find normative criteria of adequacy for nonmonotonic logic similar\nto the criterion of validity for deductive logic. Rather than stipulating that\nthe conclusion of an inference be true in all models in which the premises are\ntrue, we require that the conclusion of a nonmonotonic inference be true in\n``almost all'' models of a certain sort in which the premises are true. This\n``certain sort'' specification picks out the models that are relevant to the\ninference, taking into account factors such as specificity and vagueness, and\nprevious inferences. The frequencies characterizing the relevant models reflect\nknown frequencies in our actual world. The criteria of adequacy for a default\ninference can be extended by thresholding to criteria of adequacy for an\nextension. We show that this avoids the implausibilities that might otherwise\nresult from the chaining of default inferences. The model proportions, when\nconstrued in terms of frequencies, provide a verifiable grounding of default\nrules, and can become the basis for generating default rules from statistics.\n", "weight": 0.7271081805229187}, {"link": "http://arxiv.org/abs/cs/0209022v2", "name": "A Comparison of Different Cognitive Paradigms Using Simple Animats in a\n  Virtual Laboratory, with Implications to the Notion of Cognition", "description": "  In this thesis I present a virtual laboratory which implements five different\nmodels for controlling animats: a rule-based system, a behaviour-based system,\na concept-based system, a neural network, and a Braitenberg architecture.\nThrough different experiments, I compare the performance of the models and\nconclude that there is no \"best\" model, since different models are better for\ndifferent things in different contexts.\n  The models I chose, although quite simple, represent different approaches for\nstudying cognition. Using the results as an empirical philosophical aid,\n  I note that there is no \"best\" approach for studying cognition, since\ndifferent approaches have all advantages and disadvantages, because they study\ndifferent aspects of cognition from different contexts. This has implications\nfor current debates on \"proper\" approaches for cognition: all approaches are a\nbit proper, but none will be \"proper enough\". I draw remarks on the notion of\ncognition abstracting from all the approaches used to study it, and propose a\nsimple classification for different types of cognition.\n", "weight": 0.9859327673912048}]}